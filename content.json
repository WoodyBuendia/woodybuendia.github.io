{"meta":{"title":"WoodyBuendia","subtitle":"","description":"","author":"Woody Buendia","url":"http://woodybuendia.site","root":"/"},"pages":[{"title":"留言板","date":"2019-05-28T03:18:11.000Z","updated":"2020-06-20T07:35:20.327Z","comments":true,"path":"141/index.html","permalink":"http://woodybuendia.site/141/index.html","excerpt":"","text":"欢迎留言交流。"},{"title":"所有文章","date":"2019-07-03T08:29:58.000Z","updated":"2020-06-20T07:35:20.328Z","comments":false,"path":"165/index.html","permalink":"http://woodybuendia.site/165/index.html","excerpt":"","text":""},{"title":"找回密码","date":"2019-07-12T08:25:40.000Z","updated":"2020-06-20T07:35:20.328Z","comments":false,"path":"218/index.html","permalink":"http://woodybuendia.site/218/index.html","excerpt":"","text":""},{"title":"用户中心","date":"2019-07-12T08:23:51.000Z","updated":"2020-06-20T07:35:20.328Z","comments":false,"path":"215/index.html","permalink":"http://woodybuendia.site/215/index.html","excerpt":"","text":""},{"title":"Music","date":"2019-04-09T07:15:29.000Z","updated":"2020-06-20T07:35:20.327Z","comments":false,"path":"37/index.html","permalink":"http://woodybuendia.site/37/index.html","excerpt":"","text":"[audio mp3=”http://35.229.160.101/wp-content/uploads/2019/04/武聆音雄-大圣娶妻之片头曲.mp3&quot;\\]\\[/audio\\]"},{"title":"所有标签All tags","date":"2019-07-18T07:46:11.000Z","updated":"2020-06-20T07:35:20.328Z","comments":false,"path":"266/index.html","permalink":"http://woodybuendia.site/266/index.html","excerpt":"","text":""},{"title":"关于我","date":"2019-05-15T02:04:28.000Z","updated":"2020-06-20T07:35:20.327Z","comments":false,"path":"57/index.html","permalink":"http://woodybuendia.site/57/index.html","excerpt":"","text":"我是一名天线微波行业的从业人员，主要是从事阵列天线、电磁仿真、相控阵相关算法、星载天线等。 说起来，从我电研究生毕业之后，有幸进入某卫星总体单位，才得以接触星载天线、阵列方面。工作期间曾重构了MATLAB HFSS API，这是一套matlab编写脚本控制HFSS建模仿真的工具，可能很人只因为这个才知道我的。 Woody是我的英文名，因为我本名吴迪。Buendia是年少无知时瞎选的一个英文姓氏，来自于百年孤独，当时觉着有无常轮回之意。后来才知道，一个产自哥伦比亚的咖啡牌子也叫Buendia，特地买来尝尝，味道还不错。 曾在新浪博客和网易博客有过一些文章，大多不足一晒。 2019年买下了woodybuendia.site这个域名，租了一个VPS服务器，借此搭建了一个博客。打算逐渐转移到这个个人博客站点，但不知能坚持多久。 本人兴趣倒十分广泛，但大多不甚精专，想来也是惭愧。作文成博客，不知会对旁人有多大帮助，每想到这里，便十分惶恐。 这个博客，由于我不擅长Linux，搭建之初完全按照网络各种教程操作，也不知哪里弄的不对，没有办法更新和更换主题，唯有发表文章这个功能尚能使用，所以导致博客不甚美观，文章排版也有些不科学。 联系方式：tinywoody@126.com; woodybuendia@gamil.com 欢迎交流。 By Woody Buendia 20190515"},{"title":"所有文章","date":"2019-07-03T08:29:58.000Z","updated":"2020-06-18T07:47:34.376Z","comments":false,"path":"allpost/index.html","permalink":"http://woodybuendia.site/allpost/index.html","excerpt":"","text":""},{"title":"Music","date":"2019-04-09T07:15:29.000Z","updated":"2020-06-20T07:20:21.350Z","comments":false,"path":"music/index.html","permalink":"http://woodybuendia.site/music/index.html","excerpt":"","text":"[audio mp3=”/source/images/2019/04/武聆音雄-大圣娶妻之片头曲.mp3”][/audio]"},{"title":"about","date":"2020-06-18T08:58:51.000Z","updated":"2020-06-18T09:02:03.147Z","comments":true,"path":"about/index.html","permalink":"http://woodybuendia.site/about/index.html","excerpt":"","text":"我是一名天线微波行业的从业人员，主要是从事阵列天线、电磁仿真、相控阵相关算法、星载天线等。 说起来，从我电研究生毕业之后，有幸进入某卫星总体单位，才得以接触星载天线、阵列方面。工作期间曾重构了MATLAB HFSS API，这是一套matlab编写脚本控制HFSS建模仿真的工具，可能很人只因为这个才知道我的。 Woody是我的英文名，因为我本名吴迪。Buendia是年少无知时瞎选的一个英文姓氏，来自于百年孤独，当时觉着有无常轮回之意。后来才知道，一个产自哥伦比亚的咖啡牌子也叫Buendia，特地买来尝尝，味道还不错。 曾在新浪博客和网易博客有过一些文章，大多不足一晒。 2019年买下了woodybuendia.site这个域名，租了一个VPS服务器，借此搭建了一个博客。打算逐渐转移到这个个人博客站点，但不知能坚持多久。 本人兴趣倒十分广泛，但大多不甚精专，想来也是惭愧。作文成博客，不知会对旁人有多大帮助，每想到这里，便十分惶恐。 这个博客，由于我不擅长Linux，搭建之初完全按照网络各种教程操作，也不知哪里弄的不对，没有办法更新和更换主题，唯有发表文章这个功能尚能使用，所以导致博客不甚美观，文章排版也有些不科学。 联系方式：tinywoody@126.com; woodybuendia@gamil.com欢迎交流。 By Woody Buendia20190515"},{"title":"Ansys HFSS优化工具箱的使用：以耦合微带线电桥为例","date":"2019-07-18T07:13:12.000Z","updated":"2020-06-20T03:26:26.691Z","comments":true,"path":"oldposts/ansys-hfss-e4-bc-98-e5-8c-96-e5-b7-a5-e5-85-b7-e7-ae-b1-e7-9a-84-e4-bd-bf-e7-94-a8-ef-bc-9a-e4-bb-a5-e8-80-a6-e5-90-88-e5-be-ae-e5-b8-a6-e7-ba-bf-e7-94-b5-e6-a1-a5-e4-b8-ba-e4-be-8b.html","permalink":"http://woodybuendia.site/oldposts/ansys-hfss-e4-bc-98-e5-8c-96-e5-b7-a5-e5-85-b7-e7-ae-b1-e7-9a-84-e4-bd-bf-e7-94-a8-ef-bc-9a-e4-bb-a5-e8-80-a6-e5-90-88-e5-be-ae-e5-b8-a6-e7-ba-bf-e7-94-b5-e6-a1-a5-e4-b8-ba-e4-be-8b.html","excerpt":"","text":"为说明Ansys Electronics Desktop（即HFSS俗称海飞丝）中优化工具箱（Optimization tool）的使用，通过Optimization中的遗传算法（GA）为例，优化耦合微带线电桥。 HFSS更新至2019 R2（up to data 20190718）,不过我还在用2019 R1，新版本没找到。 网友投稿，HFSS 2019R2： Ansys Electronics Dsktop 2019 R2 Win64链接: https://pan.baidu.com/s/1Kibax1UOfBEYQfBRf8tOBA 提取码: 91zv HFSS 俗称海飞丝 耦合带线四端口耦合带线电桥，原理请查阅相关资料，模型如下图： 耦合线电桥 HFSS优化工具箱HFSS在使用优化工具箱之前，照例，依旧需要将设计到的尺寸用参数变量表示，并且需要在菜单中，将需要优化的参数勾选，才可以在Optimization选项卡中修改。 添加优化变量，设置数值范围 新建优化添加了变量之后，在左侧工程树中，选中Optimistics，单击右键，添加优化，选择Optimization，如下图所示： 添加优化 当然，添加之前需要正常设置求解和扫频等必须步骤。 新建优化之后，在Setup Optimization选项卡中，设置优化目标、求解算法、变量等。 这里电桥的优化仅涉及到S参数，因此较为简单。优化目标（即Cost function）可以通过表达式，表示复杂的目标，根据项目实际自己摸索。 Optimizer选择和设置这里选择Optimizer为MATLAB，选择之后在右侧Setup中可以选择算法，需要注意的是优化参数的个数需要手动填入。注意看，在Optimizer下方有个Max No of Iterations，指的是优化最大迭代步数，默认1000。通常建议默认就行，优化开始后观察cost变化曲线，如果几百步内没有下降趋势，那么一般是由于优化变量或参数范围不合理导致，继续优化也没有意义了。 添加目标函数Cost Function 设置目标 选择变量 选择变量 注意，这里的变量不得和第一步，全局变量的范围冲突。 点击确定后，即可通过左侧工程树下的Optimization右键——分析，计算了。 全局设置：HFSS中添加MATLAB路径Tools——Options——General Option 将MATLAB路径添加值HFSS全局设置中。 如此，优化时，HFSS将会自动打开一个MATLAB的新窗口，将每次仿真的结果传递给MATLAB中，由MATLAB optimization tool工具箱中的遗传算法GA来进行迭代，将下一次参数的值传给HFSS，进行下一轮仿真。 优化结果查看在左侧工程树optimization选中，右击，选择View Analysis Result即可查看结果，HFSS会动态显示cost变化，如果cost能随迭代步数显著下降，说明选择的变量是关键变量，且变量优化的范围合理。否则，需要调整优化设置。"},{"title":"Antenna Magus Pro 2019 V9.2","date":"2019-07-18T08:04:16.000Z","updated":"2020-06-20T03:26:26.693Z","comments":true,"path":"oldposts/antenna-magus-pro-2019.html","permalink":"http://woodybuendia.site/oldposts/antenna-magus-pro-2019.html","excerpt":"","text":"Antenna Magus目前已经更新到 2019.2 v9.2，同时Magus 2019已经更改软件使用规则，没有license将不再能进入软件。由于目前网络上下载的CST 2019 license并不适用于magus，请使用下方链接中的license进行破解激活，应注意该license与CST 2019 update SP3相冲突，也就是要想用magus的话就不能使用sp3更新包了。。。 在破解安装9.2的过程中，我发现该license适用于magus 9.0，不适用于9.2，为了能用9.2，找到一种使用方法： 首先安装9.0版本，将安装目录下的solver文件夹拷贝复制，然后重新安装9.2版本，将刚才复制的solver文件夹移入安装目录进行替换，再按照常规方法进行破解之后即可使用。 Antenna Magus Pro 2019 v9.0 链接: https://pan.baidu.com/s/1oHzxa3Pu-F2XZ16M5zgjPA 提取码: 933m Antenna Magus Pro 2019 v9.2 链接: https://pan.baidu.com/s/1t2iZr5osdVjk5sbI5K7I3Q 提取码: 93e9"},{"title":"CST优化工具箱的使用-以分支线电桥的优化为例","date":"2019-07-18T06:42:03.000Z","updated":"2020-06-20T03:26:26.700Z","comments":true,"path":"oldposts/cst-e4-bc-98-e5-8c-96-e5-b7-a5-e5-85-b7-e7-ae-b1-e7-9a-84-e4-bd-bf-e7-94-a8-e4-bb-a5-e5-88-86-e6-94-af-e7-ba-bf-e7-94-b5-e6-a1-a5-e7-9a-84-e4-bc-98-e5-8c-96-e4-b8-ba-e4-be-8b.html","permalink":"http://woodybuendia.site/oldposts/cst-e4-bc-98-e5-8c-96-e5-b7-a5-e5-85-b7-e7-ae-b1-e7-9a-84-e4-bd-bf-e7-94-a8-e4-bb-a5-e5-88-86-e6-94-af-e7-ba-bf-e7-94-b5-e6-a1-a5-e7-9a-84-e4-bc-98-e5-8c-96-e4-b8-ba-e4-be-8b.html","excerpt":"","text":"为了说明CST优化工具箱的使用，本文以分支线电桥的优化为例，通过CST优化工具箱中的遗传算法优化电桥S参数，简要说明CST优化工具箱的使用。 分支线电桥：四端口微带耦合线电桥 指标要求： 工作频率：L； 耦合度：3dB；插入损耗：≤0.3dB； 端口电压驻波比：≤1.5； 端口隔离度：≥18dB； 端口不平衡度：≤±0.2dB； 端口相位不平衡度：≤90°±3°； 在CST中建模如下： 介质材料：罗杰斯4350B，介电常数3.66；介质板厚度0.508mm 优化设置首先，建模时要将所有变量参数化，即：使用变量表达各个尺寸。 在选项卡中点击Optimizer，在setting页面选择需要优化的参数，制定各个参数的变化范围，即min和max值。在Algorith下拉菜单中，可以选择使用的优化算法，对应的属性在右侧。General Properties中可以设置需要保存的优化结果，如果发现CST优化时，没有保存所有的结果，可在此处修改成保存全部。 点击Goals选项卡，设置优化目标，根据项目求设定优化目标。这里按照电桥的要求，设置S参数为目标。 点击Ok保存，点击Start开始运行。 注意，如果使用分布式计算，这里可以在第一行右侧的Acceleration修改Distributed Computing(DC)设置，将优化参数数量提高到所有可用线程数量。这样可以并行计算多组参数，大大提高效率。 优化结果S参数（端口耦合度与隔离度） 优化过程中的Goals变化可在左侧工程树中找到，如图："},{"title":"Antenna Magus Pro 8.0和CST 2018安装与破解","date":"2019-05-07T02:28:57.000Z","updated":"2020-06-20T03:26:26.695Z","comments":true,"path":"oldposts/antenna-magus-pro-8-0-e5-92-8ccst-2018-e5-ae-89-e8-a3-85-e4-b8-8e-e7-a0-b4-e8-a7-a3.html","permalink":"http://woodybuendia.site/oldposts/antenna-magus-pro-8-0-e5-92-8ccst-2018-e5-ae-89-e8-a3-85-e4-b8-8e-e7-a0-b4-e8-a7-a3.html","excerpt":"","text":"Antenna Magus是一个非常实用、天线种类很多的快速天线设计软件，最大的优势是集成了许多现有的天线形式，根据输入指标快速设计初步的天线尺寸。 Antenna Magus可以导出CST和Feko模型，软件内也有快速评估工具，可以生成天线性能报告。 Antenna Magus Pro8.0对应CST 2018，两个配合使用。 由于Antenna Magus的license server使用的是CST的license server，因此安装Antenna Magus之前需要事先安装CST 2018. CST 2018下载地址： 链接:https://pan.baidu.com/s/1XP9Pphmz-PThPoC1TpO-GA 提取码:2919 复制这段内容后打开百度网盘手机App，操作更方便哦 Antenna Magus Pro8.0下载地址： 链接：https://pan.baidu.com/s/18\\_Scrv5byi6YGuceYLxhUQ 提取码：tnmy 复制这段内容后打开百度网盘手机App，操作更方便哦 破解方法：安装破解好CST 2018之后。运行：AntennaMagusPro8.0.0.exe 安装完成后，从：CST Studio Suite 2018 x64 Crack Only文件夹中拷贝CST_patch.exe文件到Magus安装位置，如:C:\\Program Files\\Antenna Magus 在AntennaMagus安装文件夹中运行CST_patch； 等待运行完成后，破解完成。 运行AntennaMagus，会出现报错界面，直接点击忽略： 打开AntennaMagus界面： Enjoy！ by Woody Buendia 20190507"},{"title":"【工作笔记】RFID系统工作原理与920MHz读卡器天线设计","date":"2019-05-24T09:24:50.000Z","updated":"2020-06-20T03:26:26.705Z","comments":true,"path":"oldposts/e3-80-90-e5-b7-a5-e4-bd-9c-e7-ac-94-e8-ae-b0-e3-80-91rfid-e7-b3-bb-e7-bb-9f-e5-b7-a5-e4-bd-9c-e5-8e-9f-e7-90-86-e4-b8-8e920mhz-e8-af-bb-e5-8d-a1-e5-99-a8-e5-a4-a9-e7-ba-bf-e8-ae-be-e8-ae-a1.html","permalink":"http://woodybuendia.site/oldposts/e3-80-90-e5-b7-a5-e4-bd-9c-e7-ac-94-e8-ae-b0-e3-80-91rfid-e7-b3-bb-e7-bb-9f-e5-b7-a5-e4-bd-9c-e5-8e-9f-e7-90-86-e4-b8-8e920mhz-e8-af-bb-e5-8d-a1-e5-99-a8-e5-a4-a9-e7-ba-bf-e8-ae-be-e8-ae-a1.html","excerpt":"","text":"【工作笔记】工作笔记系列文章，将会记录在工作中学习或者遇到的各种知识点与问题，一方面增强记忆、方便回忆；另一方面作为参考。 RFID系统工作原理简介射频识别技术——Radio Frequency Identification，简称 RFID；是一种利用无线电识别物体的技术，可以做到品级标签识别能力（ILT：Item Level Tagging）。 一个较为典型的射频识别系统的基本结构的组成一般包括标签（Tag）、读写器（Reader）和应用系统（Application System）。RFID 系统的工作流程是：阅读器通过天线发射调制信号，当标签进入到可识别区域时，标签通过天线接收能量并激活芯片，并将自身的编码信息（ID）通过标签天线反馈给阅读器。阅读器天线接收到标签天线发送回来的载波信号，对信号进行解调和解码后送到数据交互管理系统进行处理。 RFID工作频段、工作方式、作用距离低频（LF）：125 kHz-134 kHz；工作方式：电磁耦合；作用距离：低频读写器天线的读写范围一般为几厘米至几十厘米。 高频（HF）：13.56 MHz； 超高频（UHF)：国际标准为 860 MHz-960 MHz，在中国为902 MHz-928 MHz; 微波波段：2.4 GHz 和 5.8 GHz。 射频识别系统与天线的分类对于采用被动式标签的射频识别系统而言，根据工作频段的不同具有两种工作模式。一种是感应耦合（Inductive Coupling）工作模式,这种模式也称为近场工作模式，它主要适用用于低频和高频RFID系统；另一种则是反向散射（Back scattering）工作模式，这种模式也称为远场工作模式，主要适用于超高频和微波RFID系统。 感应耦合模式主要是指读写器天线和标签天线都采用线圈形式。当读写器在阅读标签时，发出未经调制的信号，处于读写器天线近场的电子标签天线接收到该信号并激活标签芯片之后，由标签芯片根据内部存储的全球唯一的识别号（ID）控制标签天线中的电流大小。这个电流的大小进一步增强或者减小阅读器天线发出的磁场。这时，读写器的近场分量展现出被调制的特性，读写器内部电路检测到这个由于标签而产生的调制量并解调并得到标签信息。 在反向散射工作模式中，读写器和电子标签之间采用电磁波来进行信息的传输。当读写器对标签进行阅读识别时，首先发出未经调制的电磁波，此时位于远场的电子标签天线接收到电磁波信号并在天线上产生感应电压，电子标签内部电路将这个感应电压进行整流并放大用于激活标签芯片。当标签芯片激活之后，用自身的全球唯一标识号对标签芯片阻抗进行变化，当电子标签芯片的阻抗和标签芯片之间的阻抗匹配较好时则基本不反射信号，而阻抗匹配不好时则将几乎全部反射信号，这样反射信号就出现了振幅的变化，这种情况类似于对反射信号进行幅度调制处理。读写器通过接收到经过调制的反射信号判断该电子标签的标识号并进行识别。这类天线主要包括微带天线、平面偶极子天线和环形天线。 ….待续"},{"title":"【MATLAB HFSS API】遇到问题该如何解决","date":"2020-02-23T00:49:48.000Z","updated":"2020-06-20T03:26:26.689Z","comments":true,"path":"oldposts/MATLAB HFSS API遇到问题该如何解决.html","permalink":"http://woodybuendia.site/oldposts/MATLAB%20HFSS%20API%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98%E8%AF%A5%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3.html","excerpt":"","text":"——记一次与读者Email的交流记录 首先，大家新年好。许久没有更新文章了，恰好前几天收到一封邮件，来询问关于MATLAB HFSS API使用中的问题。这位朋友的邮件，可以说写的非常好，不仅完整清晰的记录的问题，也可以看出是在认真思考之后才来寻求帮助的。 就把这次沟通的过程，作为2020年第一篇文章吧。 简而言之，这位朋友在使用API里面的一个函数，名为 hfssEditSources ，遇到了问题。如果有人在使用中遇到问题，请仔细阅读本文，应该会有帮助。本文详细描述了遇到报错该如何解决，以及如何参照HFSS自动记录的脚本，来修改和编写函数。这是一个通用的做法。 第一封邮件Woody Buendia你好： 我是你的博客的一位读者，读到你的教程和资料之后，让我收获很多。 但作为刚刚设计天线仿真的一个新手，在我自己进行仿真时，遇到了问题，困扰了我几天仍然没有解决，想向你请教一下。 首先我基于较早版本的examples文件夹中的microwave_patch.m这个文件重新进行了设计，得到了一个9*1的线阵。由于我的目标是基于hfss和matlab，利用***算法调整阵元的激励，从而优化阵列方向图。因此需要对阵元激励进行调整，在读过你的教程之后，基于我的理解，我采用了hfssEditSources这个函数，格式如下： 可以得到vbs脚本，但在hfss中run script之后，报错如下： 我个人分析认为，.m文件没有报错，对于函数的使用应该是没有问题的。应该是hfssEditSources.m或者vbs文件的问题，但对于vbs的语法我个人一知半解，对于这个报错网上的讨论也不多，我自己的理解很可能是错的。就想就这个问题问问你，听一下你的见解。 在工作日的晚上打扰你，还请谅解；你能抽时间阅读我的邮件和问题，我不胜感激。 另外，也想咨询你一下，对于方向图优化的过来人的经验和想法，比如这个方面是否有其他的成熟的模式或者软件，如果你愿意指导和分享给我，我也十分感谢！ 附件中，是我的.m文件和vbs文件，.m文件由于进行了多次尝试，注释的较乱，请多包涵。wx 2020.02.19 我的回复wx 你好我简要写了一个文档，你可以参考看看，最后附的matlab代码我并没有来得及验证，但意思应该表达的较为明确了。 对于方向图优化的问题：如果是优化副瓣电平、加窗等，这种现有的解析公式已经有比较好的结果了，可以参考天线相关书籍，例如电子科技大学王建老师的书：阵列天线理论与工程应用；如果是特殊的波束要求，使用随机优化算法的效果还是比较好的。但是仿真起来有些麻烦，就比如你现在做的，会遇到matlab来回调用hfss，效率比较低。这个问题我也遇到过，最后是通过避免调用hfss来提高效率，***WoodyBuendia20200220 附件：http://woodybuendia.site/wp-content/uploads/2020/02/Edit-Sources问题.pdf 这位朋友的回信WoodyBuendia： 十分感谢你的回复和详细文档，上午收到了你的文档就开始了调试。问题最终被解决了，对照test和microstrip的vbs文件的不同，我发现我使用的hfss15和你使用的hfss2019 r1所需要进行的修改不同，我重新在你的hfssEditSources.m文件上进行了一定程度的修改：1. 将幅度magnitudes相关的“%fw”修改为“%fW”（单位的问题）；2. 将源程序中最后的%fprintf(fid, ‘Array(“NAME:Impedances”), _\\n’); %fprintf(fid, ‘ false, false,false,”1W”‘);的两行代码，对照正确的vbs文件修改为了fprintf(fid, ‘Array(“NAME:Impedances”), false, false’);3. 删除了一些下划线；这样修改后得到了附件中的hfssEditSourcestest.m。另外，考虑到函数有传入mode参数的可能，增加了函数的一个参数mode，将原有对mode赋1的操作，修改为与幅相类似的循环，得到附件中的hfssEditSourcesupdate.m。这两个修改后的文件都可以完成edit sources的操作。另外，你有关方向图优化的建议对我来说也十分有价值，说真的，我本来的想法***【此处隐去】十分感谢你的回复和帮助，解决了我的困惑，并且让我从matlab编程，接触到了vbs层次，掌握了新的调试技巧，加深了vbs使用和api编写的理解，这对我接下来的仿真和学习帮助真的很大。再次感谢你在百忙之中的指导和帮助，也希望以后能和前辈就其他问题多多交流，还请你不吝赐教。wx 20200220"},{"title":"【解决办法】win10华硕笔记本音频服务未响应或者播放失败请切换输出设备","date":"2019-11-23T06:28:20.000Z","updated":"2020-06-20T03:26:26.708Z","comments":true,"path":"oldposts/e3-80-90-e8-a7-a3-e5-86-b3-e5-8a-9e-e6-b3-95-e3-80-91win10-e5-8d-8e-e7-a1-95-e7-ac-94-e8-ae-b0-e6-9c-ac-e9-9f-b3-e9-a2-91-e6-9c-8d-e5-8a-a1-e6-9c-aa-e5-93-8d-e5-ba-94-e6-88-96-e8-80-85-e6-92-ad.html","permalink":"http://woodybuendia.site/oldposts/e3-80-90-e8-a7-a3-e5-86-b3-e5-8a-9e-e6-b3-95-e3-80-91win10-e5-8d-8e-e7-a1-95-e7-ac-94-e8-ae-b0-e6-9c-ac-e9-9f-b3-e9-a2-91-e6-9c-8d-e5-8a-a1-e6-9c-aa-e5-93-8d-e5-ba-94-e6-88-96-e8-80-85-e6-92-ad.html","excerpt":"","text":"我要被我的笔记本逼疯了，平时很少用到音频，基本也不用笔记本听声音。 但是我的笔记本一直有问题，总是音频服务未响应，表现为chrome播放在线视频没有声音，网易云音乐播放时提示：播放失败 请切换输出设备。 之前可以重启或者重启音频服务解决问题，但是今天上午无论无任何都不能使笔记本出声。一度想砸了电脑。 反复卸载重装声卡驱动也无法解决。 最终找到问题所在：windows音频服务的登陆设置有错误。 打开Windows Audio服务，选择登陆选项卡，选择第二项：此账户，浏览，输入local会自动选择本地服务，密码为空，选择应用。电脑立马出声。"},{"title":"CST Studio 2018分布式计算(Distributed Computing)部署和破解","date":"2019-05-22T09:15:48.000Z","updated":"2020-06-20T03:26:26.702Z","comments":true,"path":"oldposts/cst-studio-2018-e5-88-86-e5-b8-83-e5-bc-8f-e8-ae-a1-e7-ae-97distributed-computing-e9-83-a8-e7-bd-b2-e5-92-8c-e7-a0-b4-e8-a7-a3.html","permalink":"http://woodybuendia.site/oldposts/cst-studio-2018-e5-88-86-e5-b8-83-e5-bc-8f-e8-ae-a1-e7-ae-97distributed-computing-e9-83-a8-e7-bd-b2-e5-92-8c-e7-a0-b4-e8-a7-a3.html","excerpt":"","text":"The Distributed Computing system allows the distribution of independent simulation runs over several computers within a network. We will describe the basic architecture of the system first before focusing on installation and configuration issues.——CST STUDIO SUITE 2018 Help CST的分布式计算，允许将仿真的求解分别运行在不同的求解端（Solver Server）。构架可以参考CST官方的帮助文档，如下图： 对应的CST客户端设置： 部署方式 客户端 客户端安装完整的CST 2018，正常安装即可； CST 2018下载地址： 链接:https://pan.baidu.com/s/1XP9Pphmz-PThPoC1TpO-GA 提取码:2919 CST DC main control 仅安装DC main control； 求解服务器 完整安装CST; 破解 客户端 现有的CST 2018很多破解版本是不支持DC分布式计算的，偶然得到一个可以用的Lic文件，可以实现分布式计算。 为避免版权纠纷，此处不提供破解版下载方式。网上广为流传的2018版CST的license是无法实现分布式计算，建议Google搜索关键词：CST 2019. CST 2019 license可以用于CST 2018. DC main control 打开DC main control，如图： 为其分配工作目录，注意，DC作为分布式计算的中心节点，所有的客户端模型数据、求解服务器解算结果，均会发送到DC 上，因此建议为DC 分配存储中间较大、且为SSD的工作空间。 Solver Server求解服务器 运行CST DC Solver control 为求解服务器分配工作目录、填写DC main control IP地址，其中Number of Servers数量表示该求解服务器贡献于DC的个数。 端口CST 2018默认即可。 点击开始服务：Start Server 部署完成后 部署完成后，在DC 的main control可以看到网络上所有的solver server，如图： 如何使用 以笔记本端运行的CST为例，打开CST后，在菜单栏中设置DC相关信息，填写DC IP地址。 运行CST Main control，在Remote Connection…中输入DC IP地址，点击连接。 勾选DC，第一项设置意思是分布式计算在，参数扫描/最优化时，允许DC求解的参数个数。如果你服务器多，这里建议设成较高的值，如果扫参时，CST将会把最大数量的参数组合分配给所有服务器，这将会大大提高扫参速度。十分暴力。 可能问题 license的问题 在部署中，出现了：FlexNet Licensing error:-96,7. System Error: 11001 “WinSock: Host not found (HOST_NOT_FOUND)”的错误。 该问题十分蹊跷，因为各项设置已经弄好，各个服务器已经连上了DC，在客户端仿真时，已经显示将不同的任务分配给求解服务器，在连接成功之后，对话框显示：Waiting for license server to respond，等待一会之后直接跳错。如图 查看日志文件，显示：Could not connect to license to license server(270018@woodybuendia)! Error:License Server machine is down or not responding. 直观上看是license服务器问题，一度准备放弃。因为毕竟都说破解版的CST是不能用分布式计算的。 仔细考虑一下整个CST Distributed Computing 整个系统，发现无论是DC main control还是Solver server求解服务器，都没有要求任何license，但是CST又不能不验证许可就可以求解。 我认为CST把整个分布式计算的许可问题放在了客户端，DC中心节点和求解服务器都不要求许可。那么，上述问题就变成DC无法与客户端的许可服务器通信。 用过CST的同学都知道，破解第一步就是替换License文件中的第一行hostname，而这个hostname通常要求替换成计算机名称，例如我的笔记本：woodybuendia，端口默认27000，所以就变成了DC服务器寻早27000@woodybuendia这个许可证服务器。 有网路基础就知道这个地址是没有办法再TCP/IP中解析的。 于是把hostname，直接改成客户端的IP地址即可。。。。顺利实现CST分布式计算。 By Woodybuendia 20190522"},{"title":"二〇一九年四月五日·清明","date":"2019-04-05T14:05:35.000Z","updated":"2020-06-20T03:26:26.714Z","comments":true,"path":"oldposts/e4-ba-8c-e3-80-87-e4-b8-80-e4-b9-9d-e5-b9-b4-e5-9b-9b-e6-9c-88-e4-ba-94-e6-97-a5-c2-b7-e6-b8-85-e6-98-8e.html","permalink":"http://woodybuendia.site/oldposts/e4-ba-8c-e3-80-87-e4-b8-80-e4-b9-9d-e5-b9-b4-e5-9b-9b-e6-9c-88-e4-ba-94-e6-97-a5-c2-b7-e6-b8-85-e6-98-8e.html","excerpt":"","text":"今天是2019年4月5日，清明节。 昨天夜里梦到一个场景，依稀记得是在一个雨天，独自一人再回家的路上。最后一段路没有车，是一个陌生人用自行车载着我回去的。梦里彷佛还和这个人有过交谈，但这个人是谁，确实完全与记忆没有关联。 梦中回的家，竟然是爷爷家，梦里的小路和房屋都和记忆中一模一样。湿哒哒的雨天，泥泞的土路。 梦里，最终没有梦到回家，梦境在一个岔路口嘎然而止。 这个清明节，在烟台，天气晴好，刮着大风，完全不像细雨微风、烟柳如墨的江南。以前，每逢清明时节倒是十分厌恶阴雨连绵。可如今，在北方的晴空里，竟然有一丝的怀念。 十年生死两茫茫，不思量，自难忘，千里孤坟何处话凄凉。 ——谨记一个远离家乡无法回去祭奠的清明"},{"title":"内网穿透frp部署记录总结","date":"2019-07-15T09:13:11.000Z","updated":"2020-06-20T03:26:26.712Z","comments":true,"path":"oldposts/e5-86-85-e7-bd-91-e7-a9-bf-e9-80-8ffrp-e4-bd-bf-e7-94-a8-e6-95-99-e7-a8-8b.html","permalink":"http://woodybuendia.site/oldposts/e5-86-85-e7-bd-91-e7-a9-bf-e9-80-8ffrp-e4-bd-bf-e7-94-a8-e6-95-99-e7-a8-8b.html","excerpt":"","text":"根据网上教程摸索出来一套可用的方法，记录如下。 frp介绍frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。 项目地址：https://github.com/fatedier/frp/blob/master/README_zh.md ubuntu上搭建frp本人ubuntu小白，根据网上教程摸索出来一套可用的方法，记录如下。防止再次检索。 一键安装：https://github.com/MvsCode/frp-onekey Frps服务端一键配置脚本，最新版本：0.27.1 ubuntu安装方法： 以管理员身份运行：(ubuntu中，sudo代表以管理员身份运行) sudo wget https://raw.githubusercontent.com/MvsCode/frp-onekey/master/install-frps.sh -O ./install-frps.sh sudo chmod 700 ./install-frps.sh sudo ./install-frps.sh installfrps默认安装路径：/usr/local/frps/ 根据提示一步一步完成配置，默认选项即可。可修改端口以防止扫描。 配置完成之后，会提示配置信息，主要保存。尤其是dashboard登陆密码和token。 客户端配置根据平台不同，下载不同客户端，修改客户端中frpc.ini文件，需要填写的信息如下： [common] server_addr = 35.229.160.101 server_port = 65500 token = ************ [IoT_223] type = tcp local_ip = 0.0.0.0 local_port = 3389 remote_port = 6006 [S223] type = http local_port = 8080 subdomain =iot上述frpc.ini配置中，common中的token为服务器的token。第二项[IoT_223]为当前客户端的名称，可以任意修改。本地端口和远程端口按照需要修改，这里3389为本地远程连接端口，服务器远程端口6006为任意可用端口。 这样，客户端在frpc.exe文件夹中运行cmd，cmd中输入fprc即可。显示如下信息即表明运行成功： frp管理平台我的管理平台为：http://woodybuendia.site:**** 服务器配置中，dashboard意为管理平台，打开方式为在浏览器中输入IP/域名：dashboardPort 打开之后需要输入用户名和密码，打开之后的效果如下：默认显示Overview 在左侧点击TCP可以看到当前连接的客户端 frp内网穿透的意义1.远程桌面例如：客户端（公司内网的计算机），需要在公司以外的地方访问，传统方法可以使用TeamView软件等，进行连接。 使用frp内网穿透之后，可以直接在windows自带的远程桌面中，输入****.woodybuendia.site:**** 注意到，这里的前缀和端口是frpc.ini文件中自己配置的。 2.远程访问家里/办公室的NAS使用NAS的同学知道，在局域网中的NAS设备，是通过固定IP访问。如果使用frp内网穿透，可以直接使用次级域名加端口形式直接访问，比如我家里的NAS可以任何网络，在浏览器中输入地址： http://***.woodybuendia.site:****/ 访问。 该项属于：通过自定义域名访问部署于内网的 web 服务 frp服务背景运行和自动启动windows平台：设置开机启动和后台运行 NAS: https://blog.ysoup.org/tech/synology-nas-frp-frpc.html Ubuntu: https://free-e.net/109 Frp与架设在Google Cloud platform（GCP）上的VPS端口问题在将VPS送Linode迁徙到Google Cloud platform（GCP）上时，重新部署Frp，总是遇到配置完成之后无法访问 frp的dashboard ，经查证，是由于GCP实例主机的防火墙没有开发对应端口导致，GCP默认只开放几个常用端口，需要在GCP控制面板配置防火墙出入站规则。"},{"title":"常用电磁仿真软件","date":"2019-08-19T01:17:53.000Z","updated":"2020-06-20T03:26:26.727Z","comments":true,"path":"oldposts/e5-b8-b8-e7-94-a8-e7-94-b5-e7-a3-81-e4-bb-bf-e7-9c-9f-e8-bd-af-e4-bb-b6.html","permalink":"http://woodybuendia.site/oldposts/e5-b8-b8-e7-94-a8-e7-94-b5-e7-a3-81-e4-bb-bf-e7-9c-9f-e8-bd-af-e4-bb-b6.html","excerpt":"","text":"常用电磁软件破解版下载 ANSYS Electronics Desktop 2019 R3链接: https://pan.baidu.com/s/1pYLCf23NjtRomHp7wcL7Tg 提取码: 03mx ANSYS Electronics Desktop 2019 R2链接：https://pan.baidu.com/s/1msfX8Uc8NBlJT5p9UNRt\\_Q提取码：91cq复制这段内容后打开百度网盘手机App，操作更方便哦 ANSYS Electronics Desktop 2019 R1链接：https://pan.baidu.com/s/1lNXJCVcCnf\\_T6c8te2cFjQ提取码：5puk复制这段内容后打开百度网盘手机App，操作更方便哦 CST STUDIO SUITECST 2018链接：https://pan.baidu.com/s/1ybbYqimRy1r3gaYajD4WBw提取码：80nj复制这段内容后打开百度网盘手机App，操作更方便哦 CST 2019链接：https://pan.baidu.com/s/1qVM1WOZZn50DfbOgtoiCQQ提取码：9f1r复制这段内容后打开百度网盘手机App，操作更方便哦 MATLABMATLAB R2017a链接：https://pan.baidu.com/s/1CpPK7FzA-hbmoC-Izs4zeA提取码：jh84复制这段内容后打开百度网盘手机App，操作更方便哦 Antenna Magus Pro 2019 V9.2http://woodybuendia.site/?p=283"},{"title":"建站记录","date":"2019-05-28T02:32:37.000Z","updated":"2020-06-20T03:26:26.723Z","comments":true,"path":"oldposts/e5-bb-ba-e7-ab-99-e8-ae-b0-e5-bd-95.html","permalink":"http://woodybuendia.site/oldposts/e5-bb-ba-e7-ab-99-e8-ae-b0-e5-bd-95.html","excerpt":"","text":"简要记录本网站搭建的过程，以供参考。 Update 20190629: 由于六月初特殊时期，本站点原VPS供应商：Linode新加坡机房IP被封，迁移至Google Cloud Platform。GCP活动期间注册验证信用卡送300美元，基本可以免费使用一年，地址： https://cloud.google.com/free/ 购买域名首先购买域名，本网站通过阿里云（万网）购买域名：woodybuendia.site.由于域名便宜，一下子买了十年，花费179RMB。 购买域名连接：https://wanwang.aliyun.com/ 购买VPS服务器之所以搭建个人博格，是因为前段时间从09年开始写的网易博客关站，整个网易博客整体关闭。虽然提供迁移到Lofter的途径，但毕竟感觉连黄易都能关闭博客。后面虽然经常在新浪博客发表一些文章，也总想着能自己购买服务器自建。 本站VPS服务器购买的是境外VPS提供商：Linode，网站：https://cloud.linode.com 我选择的节点是： Nanode 1GB: 1 CPU, 25GB Storage, 1GB RAMSingapore, SG 费用：5美元每月，初次注册赠送20美元，相当于5美元可以用四个月。 注意：需要支持Visa的信用卡，我用的是招商银行的全币卡。全币卡可以直接在招商银行app掌上生活中申请。 创建VPS操作系统本站使用Ubuntu16版本，在购买VPS时候即需要选择VPS服务器上运行的操作系统。 域名映射VPS服务器购买、创建系统之后，在你的VPS提供商管理界面中会看到你的VPS的IP地址，这个IP地址是公网地址。 打开阿里云域名管理的页面，将注册的域名映射到VPS的IP地址。 VPS服务器中安装Web服务器、数据库等本站使用的Web服务器数据库是 LAMP组合，“LAMP”是一组开放源代码软件，通常安装在一起以使服务器能够托管动态网站和网络应用。 这个词其实是代表第linux下的操作系统，与A帕什Web服务器的缩写。 站点数据存储在A M ySQL数据库，和动态内容用P惠普处理。 具体操作主要参考网站：https://www.howtoing.com/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-16-04 安装wordpress本网站使用wordpress作为网站内容架构。 WordPress是互联网上最流行的CMS（内容管理系统）。它允许您轻松地在PHP处理的MySQL后端设置灵活的博客和网站。 WordPress已经看到令人难以置信的采用，是一个伟大的选择，使网站快速运行。 安装参考网页：https://www.howtoing.com/how-to-install-wordpress-on-ubuntu-14-04/ 完成网站搭建Enjoy！"},{"title":"利用编程快速生成较大规模可重构阵列与编辑PIN二极管状态——Part Ⅰ:生成","date":"2019-05-27T03:45:59.000Z","updated":"2020-06-20T03:26:26.725Z","comments":true,"path":"oldposts/e5-88-a9-e7-94-a8-e7-bc-96-e7-a8-8b-e5-bf-ab-e9-80-9f-e7-94-9f-e6-88-90-e8-be-83-e5-a4-a7-e8-a7-84-e6-a8-a1-e5-8f-af-e9-87-8d-e6-9e-84-e9-98-b5-e5-88-97-e4-b8-8e-e7-bc-96-e8-be-91pin-e4-ba-8c.html","permalink":"http://woodybuendia.site/oldposts/e5-88-a9-e7-94-a8-e7-bc-96-e7-a8-8b-e5-bf-ab-e9-80-9f-e7-94-9f-e6-88-90-e8-be-83-e5-a4-a7-e8-a7-84-e6-a8-a1-e5-8f-af-e9-87-8d-e6-9e-84-e9-98-b5-e5-88-97-e4-b8-8e-e7-bc-96-e8-be-91pin-e4-ba-8c.html","excerpt":"","text":"简介在可重构天线阵列的设计中，通常使用LumpedRLC（以HFSS为例）来仿真PIN二极管各种状态。在一些较大规模的可重构天线设计中，如何快速建模和修改阵列中每个单元中的PIN二极管状态，是一个需要解决的问题。 利用 HFSS-MATLAB-API 可以通过Matlab编程生成脚本，来让HFSS软件自动执行生成的脚本。在Matlab中编辑阵列中PIN（LumpedRLC）的状态和组合，远远比在HFSS软件中手动修改要快速、简便。 关于 HFSS-MATLAB-API 的使用介绍，参考之前的文章：HFSS-MATLAB-API使用教程 本文介绍如何用该API快速生成较大规模的可重构天线阵列。 添加函数由于原api没有函数可以一个面设置LumpedRLC边界，需要添加一个函数。添加函数：hfssAssignLumpedRLC 所需输入变量：fid, Name, ObjName, iLStart, iLEnd,R,L,C,Units 其中，Name为生成的Lumped RLC名称，ObjName为选定面的名称， iLStart, iLEnd 为起始的积分线，RLC为电阻电感电容值。注意，如果仅为边界设置电阻值，那么LC的输入应为L=[]，C=[]。Units为距离单位，如mm。 具体函数内容： hfssAssignLumpedRLC hfssAssignLumpedRLC.mDownload 创建天线阵列Contents内容： Initial antenna parameter add vars Single Reconfigurable patch Assign boundary Array fclose 具体代码参见： Reconfigurable-Array_MatlabCode （程序没有考虑工作路径，需按照实际修改） ReconfigurableArray.m-1Download 打开HFSS，菜单栏选择tool——Run Script Script文件： Reconfigurable-Array.vbs_Download（下载后删除txt后缀） 示意图"},{"title":"天线阵列旁瓣的抑制","date":"2019-11-07T08:30:27.000Z","updated":"2020-06-20T03:26:26.729Z","comments":true,"path":"oldposts/e5-a4-a9-e7-ba-bf-e9-98-b5-e5-88-97-e6-97-81-e7-93-a3-e7-9a-84-e6-8a-91-e5-88-b6.html","permalink":"http://woodybuendia.site/oldposts/e5-a4-a9-e7-ba-bf-e9-98-b5-e5-88-97-e6-97-81-e7-93-a3-e7-9a-84-e6-8a-91-e5-88-b6.html","excerpt":"","text":"说明本文简要介绍天线阵列抑制旁瓣的方法，均为教科书和文献中已有的经典手段，供参考。文中给出泰勒分布的MATLAB程序。 微带阵列以1x16单元的微带阵列为例，在等幅均匀馈电的情况下，阵列方向图如下，副瓣电平为-13dB左右。 1x16线阵等幅同相方向图 通过泰勒加权，对馈电幅度加权，来抑制副瓣，激励幅度如下： 泰勒加权 泰勒加权后的方向图如下，副瓣为-20db。 MATLAB程序clc clear Num = 16; f = 25; d = 5.76; SLL = 35; nbar = Taylor_nbar(SLL); Mag = Taylor(Num, SLL, nbar);依赖函数%% Code to Generate Taylor Weights % Arik D. Brown % Original Code Author: F. W. Hopwood function [wgt] = Taylor(points,sll,nbar) r = 10^(abs(sll)/20); a = log(r+(r*r-1)^0.5) / pi; sigma2 = nbar^2/(a*a+(nbar-0.5)^2); %--Compute Fm, the Fourier coefficients of the weight set for m=1:(nbar-1) for n=1:(nbar-1) f(n,1)=1-m*m/sigma2/(a*a+(n-0.5)*(n-0.5)); if n ~= m f(n,2)=1/(1-m*m/n/n); end if n==m f(n,2)=1; end end g(1,1)=f(1,1); g(1,2)=f(1,2); for n=2:(nbar-1) g(n,1)=g(n-1,1)*f(n,1); g(n,2)=g(n-1,2)*f(n,2); end F(m)=((-1)^(m+1))/2*g(nbar-1,1)*g(nbar-1,2); end jj = [1:points]&apos;; xx = (jj-1+0.5)/points - 1/2; %-- column vector W = ones(size(jj)); %-- column vector mm = [1:nbar-1]; %-- row vector W = W + 2*cos(2*pi*xx*mm)*F&apos;; WPK = 1 + 2*sum(F); wgt = W / WPK;波导缝隙阵列天线的副瓣抑制单根波导缝隙天线出了通过泰勒加权等调节缝隙参数降低副瓣，还可以通过扼流槽来很好的降低副瓣，效果十分明显。 通过调节槽深和槽宽 通过调节槽深和槽宽 ，可以实现接近-30dB的副瓣抑制。"},{"title":"我的第一个Pyhton程序：通过百度地图API自动查询路况","date":"2019-11-07T07:50:35.000Z","updated":"2020-06-20T03:26:26.731Z","comments":true,"path":"oldposts/e6-88-91-e7-9a-84-e7-ac-ac-e4-b8-80-e4-b8-aapyhton-e7-a8-8b-e5-ba-8f-ef-bc-9a-e9-80-9a-e8-bf-87-e7-99-be-e5-ba-a6-e5-9c-b0-e5-9b-beapi-e8-87-aa-e5-8a-a8-e6-9f-a5-e8-af-a2-e8-b7-af-e5-86-b5.html","permalink":"http://woodybuendia.site/oldposts/e6-88-91-e7-9a-84-e7-ac-ac-e4-b8-80-e4-b8-aapyhton-e7-a8-8b-e5-ba-8f-ef-bc-9a-e9-80-9a-e8-bf-87-e7-99-be-e5-ba-a6-e5-9c-b0-e5-9b-beapi-e8-87-aa-e5-8a-a8-e6-9f-a5-e8-af-a2-e8-b7-af-e5-86-b5.html","excerpt":"","text":"说明——人生苦短，我学Python。 说学Python说了很久，书买了很多，网上资源也下载和保存了很多，然后依然没有开始动手写过一句python。终于，今天写了第一段我的Python代码。 本文面向Python小白，大神请无视。 推荐使用Spyder 功能根据百度地图Web API，查询指定地点或区域的路况信息，并记录在txt文件中。根据一天中不同的时段，分别间隔2min、10min和30min自动查询。 准备1.申请百度地图开发者账号，获得百度地图Web API的AccessKey。 2.准备Python环境 有句名言，学Python的人，一半都被Python的环境劝退了。这是真的，太复杂了。经过不断的摸索和报错，我建议使用Spyder作为Python的集成开发环境（IDE），Spyder是一款科学python开发环境，极度适合习惯Matlab的用户。通过Anaconda Navigator主页中打开。 Python程序import requests import sys import re from datetime import datetime import time def getAK(): f = open(&apos;AK.txt&apos;,&apos;r&apos;) AccessKey = f.read() f.close() return AccessKey def getcenter(address): AK = getAK() #url = &apos;http://api.map.baidu.com/geocoding/v3/?address=烟台市玲珑路与金城路交叉口&amp;output=json&amp;ak=&apos;+AK+&apos;&amp;callback=showLocation&apos; url = &apos;http://api.map.baidu.com/geocoding/v3/?address=&apos;+address+&apos;&amp;output=json&amp;ak=&apos;+AK+&apos;&amp;callback=showLocation&apos; response = requests.get(url) datas = response.text numAll = re.findall(&apos;\\d+&apos;,datas) lng = numAll[1] lng2 = numAll[2] lat = numAll[3] lat2 = numAll[4] center = str(lat)+&apos;.&apos;+str(lat2)+&apos;,&apos;+str(lng)+&apos;.&apos;+str(lng2) return center AK = getAK() modeltpye = 1 if modeltpye == 1: #model 1 center location of given longitude and latitude address = &apos;烟台市轸大路与澳柯玛大街交叉口&apos; #address = &apos;烟台市红旗中路与上夼西路&apos; Center = getcenter(address) url = &apos;http://api.map.baidu.com/traffic/v1/around?ak=&apos;+AK+&apos;&amp;center=&apos;+Center+&apos;&amp;radius=500&amp;coord_type_input=gcj02&amp;coord_type_output=gcj02&apos; elif modeltpye == 2: #model 2 given road and city roadname = &apos;红旗中路&apos; city = &apos;烟台市&apos; url = &apos;http://api.map.baidu.com/traffic/v1/road?road_name=&apos;+roadname+&apos;&amp;city=&apos;+city+&apos;&amp;ak=&apos;+AK datatime = datetime.now().strftime(&quot;%Y-%m-%d %H_%M_%S&quot;) f = open(&apos;data_&apos;+datatime+&apos;.txt&apos;,&apos;w&apos;) try: while True: datatime = datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;) datatime_H = int(datetime.now().strftime(&apos;%H&apos;)) busytime = [6,7,8,10,11,12,13,16,17,18] cleartime = [0,1,2,3,4,5,23] if datatime_H in busytime: timestep = 60*2 elif datatime_H in cleartime: timestep = 60*30 else: timestep = 60*10 f.write(datatime) f.write(&apos;\\n&apos;) response = requests.get(url) datas = response.text count = datas.split(&quot;\\r\\n&quot;) f.write(datas) f.write(&apos;\\n&apos;) f.flush() print(datatime) time.sleep(timestep) except KeyboardInterrupt: print(datatime) f.close()解释导入依赖的库import requests import sys import re from datetime import datetime import time定义两个函数函数 getAK()，用来获取事先保存在同一目录下的AK.txt文件，文本中实现写入了你的百度AccessKey。通过这种方式让AccessKey适当隐藏一下。 函数 getcenter() 通过给定的地点，从百度API中查询对应的经纬度，默认是BD09：为百度坐标系。 主要功能实现通过request模块，来实现对链接的访问，以及读取返回的信息。url的构造参考百度Web API的说明。 url = &apos;http://api.map.baidu.com/geocoding/v3/?address=&apos;+address+&apos;&amp;output=json&amp;ak=&apos;+AK+&apos;&amp;callback=showLocation&apos; response = requests.get(url) datas = response.text定时与写入文本通过time.sleep控制程序查询时间间隔，使用try和except循环和中断。 try: while True: datatime = datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;) ... time.sleep(timestep) except KeyboardInterrupt: print(datatime)通过f.open(), f.write()读写文本。并且通过每次写入后添加f.flush()来将缓存及时写入磁盘，这样就可以在运行过程中随时写入和保存，方便查看结果。 存在的问题由于区分了忙碌时间和空闲时间，忙碌时间查询间隔为2分钟一次，空闲时段查询时间为30分钟一次，其余时间查询间隔为10分钟。 使用time.sleep()来是循环等待对应时间，通过Crt+C来中断循环。但是发现程序进去time.sleep()之后就无法中断，必须等待sleep时间结束，才会中断进程。例如，空闲时段中，按下Ctrl+C无法立刻结束进程，必须等待当前time.sleep(60*30)走完才可以结束。 效果丢到服务器里面自动跑。 题外话Python的模式匹配很好用啊，但是正则表达式还没学会。。另外能不能得到百度地图的实时用户数量分布？这样及时不堵车，也能看到车流量。"},{"title":"深度学习之图像目标检测分类-真手把手教程","date":"2019-07-19T06:30:05.000Z","updated":"2020-06-20T03:26:26.736Z","comments":true,"path":"oldposts/e6-b7-b1-e5-ba-a6-e5-ad-a6-e4-b9-a0-e4-b9-8b-e5-9b-be-e5-83-8f-e7-9b-ae-e6-a0-87-e6-a3-80-e6-b5-8b-e5-88-86-e7-b1-bb-e7-9c-9f-e6-89-8b-e6-8a-8a-e6-89-8b-e6-95-99-e7-a8-8b.html","permalink":"http://woodybuendia.site/oldposts/e6-b7-b1-e5-ba-a6-e5-ad-a6-e4-b9-a0-e4-b9-8b-e5-9b-be-e5-83-8f-e7-9b-ae-e6-a0-87-e6-a3-80-e6-b5-8b-e5-88-86-e7-b1-bb-e7-9c-9f-e6-89-8b-e6-8a-8a-e6-89-8b-e6-95-99-e7-a8-8b.html","excerpt":"","text":"0.吐槽 本人python零基础（16年就买了py学习手册一直没看完），深度学习零基础（17年买的花书翻了三页纸），突发奇想（领导要求），上马深度学习图像分类，三天时间跑起来python识别图像并对图片内容进行识别和框选分类。 吐槽：都说Python编程简洁，python的宗旨是：优美胜于丑陋、明了胜于晦涩、简洁胜于复杂、复杂胜于凌乱…..可是python的安装和各种编译器、各种库、各种pip、pip3、conda、wheel完全就把我弄昏了头。好不容易装起来了，又是各种路径、环境、配置乱七八糟各种问题，日了狗了。。真还不如MATLAB来的简单。。。好了吐槽归吐槽，本文让你从小白到运行py如飞。 1.清单 为避免文章冗长无章，先把所需清单和背景知识列举一下。 关键参考文献：Object detection and tracking in PyTorch，原作者简介： Chris Fotache is an AI researcher with [CYNET.ai_](http://www.cynet.ai/) based in New Jersey. He covers topics related to artificial intelligence in our life, Python programming, machine learning, computer vision, natural language processing and more._ 该文章中英文对照 用PyTorch来做物体检测和追踪 所需软件：python3.7、Anaconda 本来用的是PyCharm作为编辑器，Anaconda为python库环境，但是PyCharm使用的时候总是遇到问题，后面在Anaconda里面也找到了python的命令行窗口，总算把程序跑起来了。 运行平台：windows 10 2.安装和下载2.1 安装python打开python官网，下载win平台最新版3.7， https://www.python.org/downloads/windows/ 安装python，需要注意的是，勾选添加至系统路径。 2.2 安装anacondaAnaconda安装文件较大，下载安装。Anaconda 是一个管理python的库的平台，众所周知，python之所以强大，是因为有各种库。需要什么功能，首先寻找有没有库，这也导致了python的库版本众多，管理困难，开发环境混乱。 https://www.anaconda.com/distribution/ 下载链接 2.3 下载文件根据 参考文献：Object detection and tracking in PyTorch， 下载所需文件，下载地址为GitHub：https://github.com/cfotache/pytorch_objectdetecttrack 下载权重文件 yolov3.weights （236MB）， 将该文件放入config文件夹中，下载地址：https://pjreddie.com/media/files/yolov3.weights 2.4 安装python库所需库：pytorch、opencv、matplotlib 运行Anaconda Prompt 在Pytorch官网选择自己的版本和平台，找到相应安装的命令。 https://pytorch.org/ 我这里选择python3.7 ，conda安装，无CPU版。 在打开的 Anaconda Prompt 中输入下面命令安装pytorch conda install pytorch-cpu torchvision-cpu -c pytorch 在Anaconda Prompt中输入：conda install matplotlib安装matplot库 打开Anaconda Navigator 左侧选择Environment 搜索opencv，会出来三个，勾选后点击右下角的apply安装。 注意：如果勾选后选择安装出现错误，那么在creat中新建一个环境 我的就报错了，新建了一个名为opencv的环境，注意，这个环境与默认的base环境是独立的，之前安装的pytorch和matplot都还需要在安装一边。 由于anaconda环境不同，在anaconda prompt中，输入： activate opencv (此处是你新建的环境名称)切换到新环境之后，重新安装 pytorch和matplot 3 物体检测代码Object Detection in Images在从GitHub下载到的文件夹，名为：pytorch_objectdetecttrack-master，中新建python脚本：test.py 3.1脚本输入以下代码： from models import * from utils import * import os, sys, time, datetime, random import torch from torch.utils.data import DataLoader from torchvision import datasets, transforms from torch.autograd import Variable import matplotlib.pyplot as plt import matplotlib.patches as patches from PIL import Image config_path=&apos;config/yolov3.cfg&apos; weights_path=&apos;config/yolov3.weights&apos; class_path=&apos;config/coco.names&apos; img_size=416 conf_thres=0.8 nms_thres=0.4 # Load model and weights model = Darknet(config_path, img_size=img_size) model.load_weights(weights_path) model.cuda() #model.cpu() model.eval() classes = utils.load_classes(class_path) Tensor = torch.cuda.FloatTensor def detect_image(img): # scale and pad image ratio = min(img_size/img.size[0], img_size/img.size[1]) imw = round(img.size[0] * ratio) imh = round(img.size[1] * ratio) img_transforms=transforms.Compose([transforms.Resize((imh,imw)), transforms.Pad((max(int((imh-imw)/2),0), max(int((imw-imh)/2),0), max(int((imh-imw)/2),0), max(int((imw-imh)/2),0)), (128,128,128)), transforms.ToTensor(), ]) # convert image to Tensor image_tensor = img_transforms(img).float() image_tensor = image_tensor.unsqueeze_(0) input_img = Variable(image_tensor.type(Tensor)) # run inference on the model and get detections with torch.no_grad(): detections = model(input_img) detections = utils.non_max_suppression(detections, 80, conf_thres, nms_thres) return detections[0] # load image and get detections img_path = &quot;images/blueangels.jpg&quot; prev_time = time.time() img = Image.open(img_path) detections = detect_image(img) inference_time = datetime.timedelta(seconds=time.time() - prev_time) print (&apos;Inference Time: %s&apos; % (inference_time)) # Get bounding-box colors cmap = plt.get_cmap(&apos;tab20b&apos;) colors = [cmap(i) for i in np.linspace(0, 1, 20)] img = np.array(img) plt.figure() fig, ax = plt.subplots(1, figsize=(12,9)) ax.imshow(img) pad_x = max(img.shape[0] - img.shape[1], 0) * (img_size / max(img.shape)) pad_y = max(img.shape[1] - img.shape[0], 0) * (img_size / max(img.shape)) unpad_h = img_size - pad_y unpad_w = img_size - pad_x if detections is not None: unique_labels = detections[:, -1].cpu().unique() n_cls_preds = len(unique_labels) bbox_colors = random.sample(colors, n_cls_preds) # browse detections and draw bounding boxes for x1, y1, x2, y2, conf, cls_conf, cls_pred in detections: box_h = ((y2 - y1) / unpad_h) * img.shape[0] box_w = ((x2 - x1) / unpad_w) * img.shape[1] y1 = ((y1 - pad_y // 2) / unpad_h) * img.shape[0] x1 = ((x1 - pad_x // 2) / unpad_w) * img.shape[1] color = bbox_colors[int(np.where( unique_labels == int(cls_pred))[0])] bbox = patches.Rectangle((x1, y1), box_w, box_h, linewidth=2, edgecolor=color, facecolor=&apos;none&apos;) ax.add_patch(bbox) plt.text(x1, y1, s=classes[int(cls_pred)], color=&apos;white&apos;, verticalalignment=&apos;top&apos;, bbox={&apos;color&apos;: color, &apos;pad&apos;: 0}) plt.axis(&apos;off&apos;) # save image plt.savefig(img_path.replace(&quot;.jpg&quot;, &quot;-det.jpg&quot;), bbox_inches=&apos;tight&apos;, pad_inches=0.0) plt.show()3.2 运行python在打开的Anaconda Navigator中，选择环境，点击三角形箭头，在菜单中选择open with python 输入import torch，导入模块； 输入torch.cuda.is_available()，测试计算机是否有显卡。 讲道理pytorch是支持无显卡，纯CPU模式的，但是需要改代码，我不会，下载到的这个代码是GPU模式的。。好在我的笔记本有显卡，虽然很破，但是不会报错。另外，一般讲道理这里不应该通过anaconda来运行python的，而是通过PyCharm来编辑py代码和运行的。但是我的pycharm运行显卡测试时，总是Fase，换成anaconda打开的python，就显示Ture。这可能和笔记本的独显和集显有关。 3.3切换工作目录把通过anaconda启动的python命令行的工作目录切换到保存pytorch_objectdetecttrack-master的目录 输入：import os 输入：os.getcwd() 获取当前工作目录 输入os.chdir(‘’) 改变工作目录，我这里输入 import os os.chdir(&apos;D:/Python/pytorch_objectdetecttrack-master/pytorch_objectdetecttrack-master/&apos;)3.4运行代码在命令行输入：exec(open(‘test.py’).read()) 来执行test.py，即可检测图片中的物体。 4效果"},{"title":"服务器远程桌面安装MATLAB出现License Manager Error -103的解决办法","date":"2019-05-05T07:50:15.000Z","updated":"2020-06-20T03:26:26.739Z","comments":true,"path":"oldposts/e6-9c-8d-e5-8a-a1-e5-99-a8-e8-bf-9c-e7-a8-8b-e6-a1-8c-e9-9d-a2-e5-ae-89-e8-a3-85matlab-e5-87-ba-e7-8e-b0license-manager-error-103-e7-9a-84-e8-a7-a3-e5-86-b3-e5-8a-9e-e6-b3-95.html","permalink":"http://woodybuendia.site/oldposts/e6-9c-8d-e5-8a-a1-e5-99-a8-e8-bf-9c-e7-a8-8b-e6-a1-8c-e9-9d-a2-e5-ae-89-e8-a3-85matlab-e5-87-ba-e7-8e-b0license-manager-error-103-e7-9a-84-e8-a7-a3-e5-86-b3-e5-8a-9e-e6-b3-95.html","excerpt":"","text":"公司用的虚拟化，配了一台win 10的服务器。安装MATLAB 2016a的时候出现License Manager Error -103的错误。 经查找，是由于： matlab使用了 FLEXlm进行 liscense管理，而 FLEXlm不支持从远程桌面访问。不过，对 liscense文件稍加修改，就能够使用。 解决方案参考：https://blog.csdn.net/hezhongla0811/article/details/81226539 需要注意的是，不要在matlab crack文件夹中修改license_standalone.lic文件，亲测这么操作之后，C:\\Program Files\\MATLAB\\R2018a\\licenses文件夹中的license****.lic文件，依旧不行。 直接在C:\\Program Files\\MATLAB\\R2018a\\licenses文件夹中修改lic文件。 另外，原博客里面说的有些含糊的地方： 用 TS_OK SIGN 替换 SIGN 修改之后的效果： INCREMENT Aerospace_Blockset MLM 369 permanent uncounted \\ VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \\ HOSTID=ANY SN=968398 TS_OK SIGN=0D8A1582514C HOSTID=ANY SN=968398 TS_OK SIGN=0D8A1582514C MATLAB 2018a可靠的下载链接参考下面网页。 MATLAB 2018a Win/Mac/Linux 官方原版 完美激活破解版补丁"},{"title":"杂谈-读书","date":"2019-09-04T09:32:37.000Z","updated":"2020-06-20T03:26:26.737Z","comments":true,"path":"oldposts/e6-9d-82-e8-b0-88-e8-af-bb-e4-b9-a6.html","permalink":"http://woodybuendia.site/oldposts/e6-9d-82-e8-b0-88-e8-af-bb-e4-b9-a6.html","excerpt":"","text":"最近的几件事情让我挺有感触。 一，丈母娘多次在朋友圈发余秋雨大师的文化讲堂，终于忍不住怒怼了。余大师的文化苦旅在我高中时候，那看起来感觉就一个字牛逼，当时我爹翻了翻，让我不要看这种书，当时并不理解，只以为我爹老教条，不懂什么是秀口一吐就是半个盛唐的大气磅礴。后来逐渐了解了一些余大师的为人，渐觉大师人品有些问题。再后来，看到一本书，叫做识破天惊逗秋雨——余秋雨散文文史差错百例考辨，至此彻底沦为余黑。然而，我最近检索的时候也有一些疑虑：到底余大师在文格中的坏坏的写手，还只是栽赃？余大师错误百出，但不能就此推导出此人就是坏。众说纷纭，难以辨别。不过对余秋雨的印象总归不好。 二，读黄仁宇的万历十五年说实话，作为工科已经工作的人来说，万历十五年这本书很难以坚持阅读下去，但总归在一个月内看完了，看的时候觉得，这个黄的观点很不错，提出来的数字社会也很有意义，对明代的历史和人物的分析也头头是道。再看这个黄的履历，清末出生，当过兵打过仗，中年才去美国，辗转读了博士，并收到英国那个谁的赏识，很是佩服。然后，昨天在看一些资料的时候，无意中看到一篇论文，反驳黄的万历十五年里面关于李贽的分析，才发现黄的书里犯了一个我最讨厌的问题，那就是断章取义，引导读者。看了这篇论文才知道，黄对一些古文的引用完全是照着他的想法来曲解的，所有材料都为了他的观点服务，有点被欺骗的感觉。 三，流沙河老先生我并不知道流沙河是谁，检索了之后才知道在腾讯视频开过讲座，讲诗经，我应该是听过一些片段，觉得这个老先生讲的真不错，因为我本来也没有看过诗经。昨天看到流沙河是因为无意在一个记录历史的网站看到一篇文章：流沙河口述“草木篇诗案”http://mjlsh.usc.cuhk.edu.hk/book.aspx?cid=7&amp;tid=11&amp;pid=2407&amp;aid=2408因为我对文格比较感兴趣，昨天加班的时候得闲仔细看了这篇长文，再检索流沙河的一些作品，一遍是感慨文格的荒谬，一遍是对这个老先生的学识表示赞同。果然，没等我赞叹完一天，今天就看到关于流沙河的一些负面文章，说的也有细节和具体人物。再看到知乎一个提问，问流沙河与唐汉两个人的专业水平与许慎先生相比如何。才知道，流沙河讲的诗经也很多是经不起推敲的一家之言。唐汉就不用提了。 所以我也很困惑，感觉读书也很迷茫，很多书都是骗人的，然后得出这个结论的依据，也不见得就一定真是可靠。"},{"title":"毫米波无线通信英文原版《MillimeterWaveWirelessCommunications》","date":"2019-05-23T03:34:13.000Z","updated":"2020-06-20T03:26:26.733Z","comments":true,"path":"oldposts/e6-af-ab-e7-b1-b3-e6-b3-a2-e6-97-a0-e7-ba-bf-e9-80-9a-e4-bf-a1-e8-8b-b1-e6-96-87-e5-8e-9f-e7-89-88-e3-80-8amillimeterwavewirelesscommunications-e3-80-8b.html","permalink":"http://woodybuendia.site/oldposts/e6-af-ab-e7-b1-b3-e6-b3-a2-e6-97-a0-e7-ba-bf-e9-80-9a-e4-bf-a1-e8-8b-b1-e6-96-87-e5-8e-9f-e7-89-88-e3-80-8amillimeterwavewirelesscommunications-e3-80-8b.html","excerpt":"","text":"《毫米波无线通信》Theodore S. Rappaport原版pdf，Google搜索了很久都没找到，最后是一个专业微信群的同行发给我的，感谢这位朋友。 如有需求请邮件联系。"},{"title":"世界，您好！","date":"2019-03-07T03:28:10.000Z","updated":"2020-06-20T03:26:26.743Z","comments":true,"path":"oldposts/hello-world-1.html","permalink":"http://woodybuendia.site/oldposts/hello-world-1.html","excerpt":"","text":"欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！ 大家好，我是WoodyBuendia，欢迎访问我的小站。 https://www.youtube.com/watch?v=1rLWVZVWfdY"},{"title":"电扫阵列：MATLAB 建模与仿真","date":"2019-03-07T07:40:43.000Z","updated":"2020-06-20T03:26:26.741Z","comments":true,"path":"oldposts/e7-94-b5-e6-89-ab-e9-98-b5-e5-88-97-ef-bc-9amatlab-e5-bb-ba-e6-a8-a1-e4-b8-8e-e4-bb-bf-e7-9c-9f.html","permalink":"http://woodybuendia.site/oldposts/e7-94-b5-e6-89-ab-e9-98-b5-e5-88-97-ef-bc-9amatlab-e5-bb-ba-e6-a8-a1-e4-b8-8e-e4-bb-bf-e7-9c-9f.html","excerpt":"","text":"电扫阵列：MATLAB 建模与仿真 Electronically Scanned Arrays: MATLAB Modeling and Simulation 推荐一本MATLAB 关于天线阵列编程相关的书籍，中文版现在已经不好买了。15年时买了中文版，并辗转从jlqsczw_2007@163.com 得到这本书的英文原版pdf。现共享在这里。 推荐一本MATLAB 关于天线阵列编程相关的书籍，中文版现在已经不好买了。15年时买了中文版，并辗转从jlqsczw_2007@163.com 得到这本书的英文原版pdf。现共享在这里。 电扫阵列：MATLAB建模与仿真 [英] A·D·布朗 著，汪连栋，孔德培，乔会东 等 译 Electronically Scanned Arrays: MATLAB Modeling and Simulation https://pan.baidu.com/s/1RjtkYCafReFr3Ql9DTI-9w密码: e65s"},{"title":"Hello World","date":"2020-06-20T07:32:21.758Z","updated":"2020-06-20T03:26:26.744Z","comments":true,"path":"oldposts/hello-world.html","permalink":"http://woodybuendia.site/oldposts/hello-world.html","excerpt":"","text":"Welcome to My Blog. I am Woody Buendia. This blog base on Hexo. Host is Runing in Aliyun."},{"title":"网站公告：倒计时68天迁移或关站","date":"2020-04-21T12:58:10.000Z","updated":"2020-06-20T03:26:26.746Z","comments":true,"path":"oldposts/e7-bd-91-e7-ab-99-e5-85-ac-e5-91-8a-ef-bc-9a-e5-80-92-e8-ae-a1-e6-97-b668-e5-a4-a9-e8-bf-81-e7-a7-bb-e6-88-96-e5-85-b3-e7-ab-99.html","permalink":"http://woodybuendia.site/oldposts/e7-bd-91-e7-ab-99-e5-85-ac-e5-91-8a-ef-bc-9a-e5-80-92-e8-ae-a1-e6-97-b668-e5-a4-a9-e8-bf-81-e7-a7-bb-e6-88-96-e5-85-b3-e7-ab-99.html","excerpt":"","text":"最近一直瞎忙，没有时间更新博客，其实想记录的东西还有很多。 最近仿天线，中间走了一段弯路，还是想说一句，仿真、建模、自动化这些都是表面东西，做天线最核心的还是要弄明白原理，从文献资料上看来的尺寸、形式，都要能知道为什么，否则盲目的优化、仿真，是很艰难的。 然而，天线种类这么多，精力有限，大部分情况下，都是通过浏览论文来了解和学习不熟悉的东西，而这通常走马观花，或者论文本来就写的云里雾里。 另外一个比较深的感受就是，毕业之后，对技术也好，工作也好，如果没有一个强大的驱动力，像我这种不自觉地人就很难主动的去钻研。。这是真的。 驱动力来自工作任务或者项目，那总是被动去干活，时间长了就会发现各种忙乱和没有准备。 如果驱动力来自内在，那就是真正的自己钻研了，这才是一个我比较喜欢的状态。 这个博客网站，到现在访问量有两万多了，可能有些也是各种网络扫描和机器人。 累计访问:24,484 总浏览量:13,536 目前网站运行在Google Cloud PlantForm，使用的是Google Cloud首次300美元/一年的免费额度。算了一下继续使用GCP，费用比较高，个人也承担不了。打算迁徙到其他的云服务平台。 为了提高国内访问的可靠性，主要看了阿里云的主机，看看价格，也要小一千的费用一年。。最近比较穷。。哎。。不行就再找找免费的博客托管网站吧。。 2020年4月21日，倒计时68天，网站将迁移或者关闭。 感谢各种朋友的关注。 Woody Buendia 20200421 烟台"},{"title":"post_name","date":"2020-06-18T09:18:53.000Z","updated":"2020-06-20T03:26:26.748Z","comments":true,"path":"oldposts/post-name.html","permalink":"http://woodybuendia.site/oldposts/post-name.html","excerpt":"","text":""},{"title":"所有标签All tags","date":"2019-07-18T07:46:11.000Z","updated":"2020-06-18T07:47:34.377Z","comments":false,"path":"test/index.html","permalink":"http://woodybuendia.site/test/index.html","excerpt":"","text":""},{"title":"用户中心","date":"2019-07-12T08:23:51.000Z","updated":"2020-06-18T07:47:34.376Z","comments":false,"path":"user/index.html","permalink":"http://woodybuendia.site/user/index.html","excerpt":"","text":""},{"title":"网站维护记录","date":"2019-07-09T02:53:59.000Z","updated":"2020-06-20T03:26:26.749Z","comments":true,"path":"oldposts/e7-bd-91-e7-ab-99-e7-bb-b4-e6-8a-a4-e8-ae-b0-e5-bd-95.html","permalink":"http://woodybuendia.site/oldposts/e7-bd-91-e7-ab-99-e7-bb-b4-e6-8a-a4-e8-ae-b0-e5-bd-95.html","excerpt":"","text":"20190629 ：网站迁移至Google Cloud Platform；使用Apache2+PHP+MySq构架。网站内容通过插件 UpdraftPlus-备份/恢复 完整从Lionde VPS迁移至GCP。 20190708：新增分享页面、关注社交账号功能，使用WordPress插件**Share Buttons by AddThis** 实现。 20190709：新增PDF在线/页面内预览功能，提高网站PDF文件阅读体验。使用插件： Algori PDF Viewer Lite ，示例页面：http://woodybuendia.site/?p=175 20190709：之前在网站后台看到有非中文地区IP访问，并使用Google翻译查看本网站，为方便非中文访客，使用 GTranslate 插件提供页面内翻译功能；晚上浏览网站时，发现打开速度异常缓慢，使用chrome开发者模式发现是插件访问google翻译服务器所致，暂停插件 GTranslate 。"},{"title":"CST Studio Suite 2019","date":"2019-07-09T01:37:07.000Z","updated":"2020-06-20T03:26:26.704Z","comments":true,"path":"oldposts/cst-studio-suite-2019.html","permalink":"http://woodybuendia.site/oldposts/cst-studio-suite-2019.html","excerpt":"","text":"CST 2019已经更新，相应和谐版也可以下载到。 这里提供的CST 2019的license支持分布式计算。 百度网盘下载地址： 链接：https://pan.baidu.com/s/1P4BldP1xcILOkuEGpzMfiQ提取码：w8ly CST 2019 Update SP3 安装包附上 链接：https://pan.baidu.com/s/1a9rUUMO5xg6S2q02JvDW7Q提取码：304k-————————来自： cynric_liu@126.com CST Studio Suit 2019 Feature Highlights CST-Studio-Suite-2019下载"},{"title":"HFSS-MATLAB-API 使用教程","date":"2019-07-02T09:06:00.000Z","updated":"2020-06-20T03:26:26.751Z","comments":true,"path":"oldposts/hfss-matlab-api-e4-bd-bf-e7-94-a8-e6-95-99-e7-a8-8b.html","permalink":"http://woodybuendia.site/oldposts/hfss-matlab-api-e4-bd-bf-e7-94-a8-e6-95-99-e7-a8-8b.html","excerpt":"","text":"HFSS-MATLAB-API 使用教程 By WoodyBuendia 为控制本教程传播版本，提供最新的更新，不再提供教程下载，如果有需求请发邮件索取。——20200509关于HFSS脚本根据HFSS 15版本帮助文件介绍，HFSS软件使用Microsoft®Visual Basic® Scripting Edition (VBScript)脚本语言记录宏指令。 一方面，在打开HFSS软件进行一些造作时，如果选择Tools——Record Script to file，新建一个.vbs后缀的脚本文件，可以将所有的操作记录在新建的脚本中；另一方面可以编写符合格式的脚本文件，通过Tools——Run Script来让HFSS软件运行编写好的脚本。 在一些特定的场景，事先编写脚本让HFSS执行相关操作，是非常高效和准确的，可以节省大量的重复性造作；不仅如此，在有些情况下，由于建模过于复杂或者模型变量需要通过第三方优化算法相互调用，那么只能使用编写脚本的方法才能完成。 在这个最简单的脚本中，可以看到即使是新建一个圆面的操作，需要的脚本也是比较多和复杂的，如果手动一行行敲入这些脚本代码，一方面过于冗长难免出现各种错误，另一方面也无法实现提高效率的初衷。 好在前辈们给出了一些简便的方法，可以将重复性的操作变成可以调用的函数，将需要指定的相关参数作为输入，通过相关编程语言自动完成vbs脚本文件。这些操作可以通过MATLAB或者Python完成，本文介绍的HFSS-MATLAB API就是通过MATLAB编写一套可调用的程序库，通过编写MATLAB代码来生成所需的vbs脚本。 HFSS脚本：HFSS-MATLAB API如前所述，使用MATLAB编写程序是生成脚本的一个可行的方法，早在2004年，名为Vijay Ramasami (rvc@ku.edu)的前辈发布了（据我所知）一套基于MATLAB的HFSS-MATLAB API，已经实现了通过编写MATLAB程序来生成vbs脚本，之后再通过HFSS菜单栏tool-run script，选择所生成的vbs脚本文件执行。 根据我所下载到的版本，Yueliang(yue_liang423@163.com)对该API也有贡献（2008年）。然而，上述API实现功能还不够，并且不支持参数化。毕竟时过境迁，HFSS的版本也迭代到了2018，HFSS本身的功能也十分复杂，个人难以开发一个完整脚本接口。但是，HFSS每一步的操作均可以记录到脚本中，你可以将你的操作记录下来然后程序化。 在笔者的工作学习过程中，从发现这个API之后，就一直在使用这套API，因为工作的原因需要建模或者联合仿真一些诸如阵列、波导缝隙以及一些特殊类型天线。我在使用中对下载得到的API做了较大的改动，主要有以下几个方面： 添加定义参数、修改参数； 修改3dModeler中常见模型建模的函数，使其支持参数化建模； 添加了一些功能。 详细内容，请下载PDF文档： 20180411,对教程做了少量修改与修订，已更新并上传到百度云。 本文除已说明和致谢外，均为原创，未经本人同意，严禁擅自发表，包括但不限于微信、微博公共号或网站和论坛。如有需求请与本人联系。 相关资源已经上传至Github，地址为：https://github.com/WoodyBuendia/HFSS-MATLAB-API.git 鉴于GitHub有时候不便访问，也可通过百度网盘下载，链接：https://pan.baidu.com/s/1mLtNEmaIBR-TUXHpz02RFA 密码：v837​ 本教程作者吴迪 ​联系邮箱：woodybuendia@gmail.com；tinywoody@126.com; 后记自从我去年发表这个教程以来，很多朋友给我发邮件、微信，很感激同行们能够关注到这个API，也很高兴能和同行们讨论天线和HFSS的专业问题。如果有遗漏或回复不及时，还请见谅。 因为我本身只是一名毕业了的硕士研究生毕，能力有限，很多问题我也没注意到，还请大家一起改善。 另外，使用这个API是需要一定MATLAB基础的。这里说的一定基础，我觉得可能对只接触过MATLAB的人来说，还是有点要求的。 起码你要知道什么是变量，什么是函数，什么是MATLAB的工作路径，你不能运行一下代码，报错说：未定义的函数或变量’hfssNewProject’，你就跑来问为什么。你说为什么？因为你没有把这些函数的路径添加到matlab的path啊。问我怎么添加？我觉得自己百度吧。。"},{"title":"PDF：Application Note of Radar Sensing and Detection_Innosent_调频连续波","date":"2019-05-23T03:40:27.000Z","updated":"2020-06-20T03:26:26.754Z","comments":true,"path":"oldposts/pdf-ef-bc-9aapplication-note-of-radar-sensing-and-detection-innosent-e8-b0-83-e9-a2-91-e8-bf-9e-e7-bb-ad-e6-b3-a2.html","permalink":"http://woodybuendia.site/oldposts/pdf-ef-bc-9aapplication-note-of-radar-sensing-and-detection-innosent-e8-b0-83-e9-a2-91-e8-bf-9e-e7-bb-ad-e6-b3-a2.html","excerpt":"","text":"Innosent是世界上最大的商业用24GHZ雷达传感器制造商，世界第二大的自动工控用雷达制造商，位于德国乌滋堡，是一家专业设计，生产，销售应用于工业’商业·自动化控制等领域的雷达传感器的高科技公司。公司的雷达传感器是使用世界最先进的平面微带天线技术制造而成，体积小，集成化程度高，感应灵敏。公司成立于1999年，有大批有二三十年雷达开发经验的技术人员，生产的传感器远销世界各地，被广泛运用于自动开门，交通测速测距测流量，液位测量，安防闯入警报，计数器，体育测速，汽车ACC雷达巡航系统等。 在其官网上看到一些相关资料，主要是Application Note感觉写的很不错，分享一下。 原文分为四个部分，合并成一个pdf上传： 链接：https://pan.baidu.com/s/1aooawnp7o0RmWO659KTFDw 提取码：8r19 内容包括："}],"posts":[{"title":"网站公告：倒计时68天迁移或关站","slug":"397","date":"2020-04-21T12:58:10.000Z","updated":"2020-06-20T07:35:43.887Z","comments":true,"path":"posts/c519e138/","link":"","permalink":"http://woodybuendia.site/posts/c519e138/","excerpt":"","text":"最近一直瞎忙，没有时间更新博客，其实想记录的东西还有很多。 最近仿天线，中间走了一段弯路，还是想说一句，仿真、建模、自动化这些都是表面东西，做天线最核心的还是要弄明白原理，从文献资料上看来的尺寸、形式，都要能知道为什么，否则盲目的优化、仿真，是很艰难的。 然而，天线种类这么多，精力有限，大部分情况下，都是通过浏览论文来了解和学习不熟悉的东西，而这通常走马观花，或者论文本来就写的云里雾里。 另外一个比较深的感受就是，毕业之后，对技术也好，工作也好，如果没有一个强大的驱动力，像我这种不自觉地人就很难主动的去钻研。。这是真的。 驱动力来自工作任务或者项目，那总是被动去干活，时间长了就会发现各种忙乱和没有准备。 如果驱动力来自内在，那就是真正的自己钻研了，这才是一个我比较喜欢的状态。 这个博客网站，到现在访问量有两万多了，可能有些也是各种网络扫描和机器人。 累计访问:24,484 总浏览量:13,536 目前网站运行在Google Cloud PlantForm，使用的是Google Cloud首次300美元/一年的免费额度。算了一下继续使用GCP，费用比较高，个人也承担不了。打算迁徙到其他的云服务平台。 为了提高国内访问的可靠性，主要看了阿里云的主机，看看价格，也要小一千的费用一年。。最近比较穷。。哎。。不行就再找找免费的博客托管网站吧。。 2020年4月21日，倒计时68天，网站将迁移或者关闭。 感谢各种朋友的关注。 Woody Buendia 20200421 烟台","categories":[{"name":"随笔","slug":"随笔","permalink":"http://woodybuendia.site/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"【MATLAB HFSS API】遇到问题该如何解决","slug":"383","date":"2020-02-23T00:49:48.000Z","updated":"2020-06-20T07:35:43.886Z","comments":true,"path":"posts/8b9dd0b3/","link":"","permalink":"http://woodybuendia.site/posts/8b9dd0b3/","excerpt":"","text":"——记一次与读者Email的交流记录 首先，大家新年好。许久没有更新文章了，恰好前几天收到一封邮件，来询问关于MATLAB HFSS API使用中的问题。这位朋友的邮件，可以说写的非常好，不仅完整清晰的记录的问题，也可以看出是在认真思考之后才来寻求帮助的。 就把这次沟通的过程，作为2020年第一篇文章吧。 简而言之，这位朋友在使用API里面的一个函数，名为 hfssEditSources ，遇到了问题。如果有人在使用中遇到问题，请仔细阅读本文，应该会有帮助。本文详细描述了遇到报错该如何解决，以及如何参照HFSS自动记录的脚本，来修改和编写函数。这是一个通用的做法。 第一封邮件Woody Buendia你好： 我是你的博客的一位读者，读到你的教程和资料之后，让我收获很多。 但作为刚刚设计天线仿真的一个新手，在我自己进行仿真时，遇到了问题，困扰了我几天仍然没有解决，想向你请教一下。 首先我基于较早版本的examples文件夹中的microwave_patch.m这个文件重新进行了设计，得到了一个9*1的线阵。由于我的目标是基于hfss和matlab，利用***算法调整阵元的激励，从而优化阵列方向图。因此需要对阵元激励进行调整，在读过你的教程之后，基于我的理解，我采用了hfssEditSources这个函数，格式如下： 可以得到vbs脚本，但在hfss中run script之后，报错如下： 我个人分析认为，.m文件没有报错，对于函数的使用应该是没有问题的。应该是hfssEditSources.m或者vbs文件的问题，但对于vbs的语法我个人一知半解，对于这个报错网上的讨论也不多，我自己的理解很可能是错的。就想就这个问题问问你，听一下你的见解。 在工作日的晚上打扰你，还请谅解；你能抽时间阅读我的邮件和问题，我不胜感激。 另外，也想咨询你一下，对于方向图优化的过来人的经验和想法，比如这个方面是否有其他的成熟的模式或者软件，如果你愿意指导和分享给我，我也十分感谢！ 附件中，是我的.m文件和vbs文件，.m文件由于进行了多次尝试，注释的较乱，请多包涵。wx 2020.02.19 我的回复wx 你好我简要写了一个文档，你可以参考看看，最后附的matlab代码我并没有来得及验证，但意思应该表达的较为明确了。 对于方向图优化的问题：如果是优化副瓣电平、加窗等，这种现有的解析公式已经有比较好的结果了，可以参考天线相关书籍，例如电子科技大学王建老师的书：阵列天线理论与工程应用；如果是特殊的波束要求，使用随机优化算法的效果还是比较好的。但是仿真起来有些麻烦，就比如你现在做的，会遇到matlab来回调用hfss，效率比较低。这个问题我也遇到过，最后是通过避免调用hfss来提高效率，***WoodyBuendia20200220 附件：/images/2020/02/Edit-Sources问题.pdf 这位朋友的回信WoodyBuendia： 十分感谢你的回复和详细文档，上午收到了你的文档就开始了调试。问题最终被解决了，对照test和microstrip的vbs文件的不同，我发现我使用的hfss15和你使用的hfss2019 r1所需要进行的修改不同，我重新在你的hfssEditSources.m文件上进行了一定程度的修改：1. 将幅度magnitudes相关的“%fw”修改为“%fW”（单位的问题）；2. 将源程序中最后的%fprintf(fid, ‘Array(“NAME:Impedances”), _\\n’); %fprintf(fid, ‘ false, false,false,”1W”‘);的两行代码，对照正确的vbs文件修改为了fprintf(fid, ‘Array(“NAME:Impedances”), false, false’);3. 删除了一些下划线；这样修改后得到了附件中的hfssEditSourcestest.m。另外，考虑到函数有传入mode参数的可能，增加了函数的一个参数mode，将原有对mode赋1的操作，修改为与幅相类似的循环，得到附件中的hfssEditSourcesupdate.m。这两个修改后的文件都可以完成edit sources的操作。另外，你有关方向图优化的建议对我来说也十分有价值，说真的，我本来的想法***【此处隐去】十分感谢你的回复和帮助，解决了我的困惑，并且让我从matlab编程，接触到了vbs层次，掌握了新的调试技巧，加深了vbs使用和api编写的理解，这对我接下来的仿真和学习帮助真的很大。再次感谢你在百忙之中的指导和帮助，也希望以后能和前辈就其他问题多多交流，还请你不吝赐教。wx 20200220","categories":[{"name":"MATLAB","slug":"MATLAB","permalink":"http://woodybuendia.site/categories/MATLAB/"}],"tags":[{"name":"HFSS-Matlab API","slug":"HFSS-Matlab-API","permalink":"http://woodybuendia.site/tags/HFSS-Matlab-API/"}]},{"title":"【解决办法】win10华硕笔记本音频服务未响应或者播放失败请切换输出设备","slug":"374","date":"2019-11-23T06:28:20.000Z","updated":"2020-06-20T07:35:43.883Z","comments":true,"path":"posts/a591c053/","link":"","permalink":"http://woodybuendia.site/posts/a591c053/","excerpt":"","text":"我要被我的笔记本逼疯了，平时很少用到音频，基本也不用笔记本听声音。 但是我的笔记本一直有问题，总是音频服务未响应，表现为chrome播放在线视频没有声音，网易云音乐播放时提示：播放失败 请切换输出设备。 之前可以重启或者重启音频服务解决问题，但是今天上午无论无任何都不能使笔记本出声。一度想砸了电脑。 反复卸载重装声卡驱动也无法解决。 最终找到问题所在：windows音频服务的登陆设置有错误。 打开Windows Audio服务，选择登陆选项卡，选择第二项：此账户，浏览，输入local会自动选择本地服务，密码为空，选择应用。电脑立马出声。","categories":[{"name":"计算机与互联网","slug":"计算机与互联网","permalink":"http://woodybuendia.site/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%91/"}],"tags":[]},{"title":"天线阵列旁瓣的抑制","slug":"364","date":"2019-11-07T08:30:27.000Z","updated":"2020-06-20T07:35:43.881Z","comments":true,"path":"posts/ee19aabb/","link":"","permalink":"http://woodybuendia.site/posts/ee19aabb/","excerpt":"","text":"说明本文简要介绍天线阵列抑制旁瓣的方法，均为教科书和文献中已有的经典手段，供参考。文中给出泰勒分布的MATLAB程序。 微带阵列以1x16单元的微带阵列为例，在等幅均匀馈电的情况下，阵列方向图如下，副瓣电平为-13dB左右。 1x16线阵等幅同相方向图 通过泰勒加权，对馈电幅度加权，来抑制副瓣，激励幅度如下： 泰勒加权 泰勒加权后的方向图如下，副瓣为-20db。 MATLAB程序clc clear Num = 16; f = 25; d = 5.76; SLL = 35; nbar = Taylor_nbar(SLL); Mag = Taylor(Num, SLL, nbar);依赖函数%% Code to Generate Taylor Weights % Arik D. Brown % Original Code Author: F. W. Hopwood function [wgt] = Taylor(points,sll,nbar) r = 10^(abs(sll)/20); a = log(r+(r*r-1)^0.5) / pi; sigma2 = nbar^2/(a*a+(nbar-0.5)^2); %--Compute Fm, the Fourier coefficients of the weight set for m=1:(nbar-1) for n=1:(nbar-1) f(n,1)=1-m*m/sigma2/(a*a+(n-0.5)*(n-0.5)); if n ~= m f(n,2)=1/(1-m*m/n/n); end if n==m f(n,2)=1; end end g(1,1)=f(1,1); g(1,2)=f(1,2); for n=2:(nbar-1) g(n,1)=g(n-1,1)*f(n,1); g(n,2)=g(n-1,2)*f(n,2); end F(m)=((-1)^(m+1))/2*g(nbar-1,1)*g(nbar-1,2); end jj = [1:points]&apos;; xx = (jj-1+0.5)/points - 1/2; %-- column vector W = ones(size(jj)); %-- column vector mm = [1:nbar-1]; %-- row vector W = W + 2*cos(2*pi*xx*mm)*F&apos;; WPK = 1 + 2*sum(F); wgt = W / WPK;波导缝隙阵列天线的副瓣抑制单根波导缝隙天线出了通过泰勒加权等调节缝隙参数降低副瓣，还可以通过扼流槽来很好的降低副瓣，效果十分明显。 通过调节槽深和槽宽 通过调节槽深和槽宽 ，可以实现接近-30dB的副瓣抑制。","categories":[{"name":"MATLAB","slug":"MATLAB","permalink":"http://woodybuendia.site/categories/MATLAB/"},{"name":"天线与微波","slug":"MATLAB/天线与微波","permalink":"http://woodybuendia.site/categories/MATLAB/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"}],"tags":[{"name":"天线","slug":"天线","permalink":"http://woodybuendia.site/tags/%E5%A4%A9%E7%BA%BF/"}]},{"title":"我的第一个Pyhton程序：通过百度地图API自动查询路况","slug":"350","date":"2019-11-07T07:50:35.000Z","updated":"2020-06-20T07:35:43.880Z","comments":true,"path":"posts/af6469da/","link":"","permalink":"http://woodybuendia.site/posts/af6469da/","excerpt":"","text":"说明——人生苦短，我学Python。 说学Python说了很久，书买了很多，网上资源也下载和保存了很多，然后依然没有开始动手写过一句python。终于，今天写了第一段我的Python代码。 本文面向Python小白，大神请无视。 推荐使用Spyder 功能根据百度地图Web API，查询指定地点或区域的路况信息，并记录在txt文件中。根据一天中不同的时段，分别间隔2min、10min和30min自动查询。 准备1.申请百度地图开发者账号，获得百度地图Web API的AccessKey。 2.准备Python环境 有句名言，学Python的人，一半都被Python的环境劝退了。这是真的，太复杂了。经过不断的摸索和报错，我建议使用Spyder作为Python的集成开发环境（IDE），Spyder是一款科学python开发环境，极度适合习惯Matlab的用户。通过Anaconda Navigator主页中打开。 Python程序import requests import sys import re from datetime import datetime import time def getAK(): f = open(&apos;AK.txt&apos;,&apos;r&apos;) AccessKey = f.read() f.close() return AccessKey def getcenter(address): AK = getAK() #url = &apos;http://api.map.baidu.com/geocoding/v3/?address=烟台市玲珑路与金城路交叉口&amp;output=json&amp;ak=&apos;+AK+&apos;&amp;callback=showLocation&apos; url = &apos;http://api.map.baidu.com/geocoding/v3/?address=&apos;+address+&apos;&amp;output=json&amp;ak=&apos;+AK+&apos;&amp;callback=showLocation&apos; response = requests.get(url) datas = response.text numAll = re.findall(&apos;\\d+&apos;,datas) lng = numAll[1] lng2 = numAll[2] lat = numAll[3] lat2 = numAll[4] center = str(lat)+&apos;.&apos;+str(lat2)+&apos;,&apos;+str(lng)+&apos;.&apos;+str(lng2) return center AK = getAK() modeltpye = 1 if modeltpye == 1: #model 1 center location of given longitude and latitude address = &apos;烟台市轸大路与澳柯玛大街交叉口&apos; #address = &apos;烟台市红旗中路与上夼西路&apos; Center = getcenter(address) url = &apos;http://api.map.baidu.com/traffic/v1/around?ak=&apos;+AK+&apos;&amp;center=&apos;+Center+&apos;&amp;radius=500&amp;coord_type_input=gcj02&amp;coord_type_output=gcj02&apos; elif modeltpye == 2: #model 2 given road and city roadname = &apos;红旗中路&apos; city = &apos;烟台市&apos; url = &apos;http://api.map.baidu.com/traffic/v1/road?road_name=&apos;+roadname+&apos;&amp;city=&apos;+city+&apos;&amp;ak=&apos;+AK datatime = datetime.now().strftime(&quot;%Y-%m-%d %H_%M_%S&quot;) f = open(&apos;data_&apos;+datatime+&apos;.txt&apos;,&apos;w&apos;) try: while True: datatime = datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;) datatime_H = int(datetime.now().strftime(&apos;%H&apos;)) busytime = [6,7,8,10,11,12,13,16,17,18] cleartime = [0,1,2,3,4,5,23] if datatime_H in busytime: timestep = 60*2 elif datatime_H in cleartime: timestep = 60*30 else: timestep = 60*10 f.write(datatime) f.write(&apos;\\n&apos;) response = requests.get(url) datas = response.text count = datas.split(&quot;\\r\\n&quot;) f.write(datas) f.write(&apos;\\n&apos;) f.flush() print(datatime) time.sleep(timestep) except KeyboardInterrupt: print(datatime) f.close()解释导入依赖的库import requests import sys import re from datetime import datetime import time定义两个函数函数 getAK()，用来获取事先保存在同一目录下的AK.txt文件，文本中实现写入了你的百度AccessKey。通过这种方式让AccessKey适当隐藏一下。 函数 getcenter() 通过给定的地点，从百度API中查询对应的经纬度，默认是BD09：为百度坐标系。 主要功能实现通过request模块，来实现对链接的访问，以及读取返回的信息。url的构造参考百度Web API的说明。 url = &apos;http://api.map.baidu.com/geocoding/v3/?address=&apos;+address+&apos;&amp;output=json&amp;ak=&apos;+AK+&apos;&amp;callback=showLocation&apos; response = requests.get(url) datas = response.text定时与写入文本通过time.sleep控制程序查询时间间隔，使用try和except循环和中断。 try: while True: datatime = datetime.now().strftime(&quot;%Y-%m-%d %H:%M:%S&quot;) ... time.sleep(timestep) except KeyboardInterrupt: print(datatime)通过f.open(), f.write()读写文本。并且通过每次写入后添加f.flush()来将缓存及时写入磁盘，这样就可以在运行过程中随时写入和保存，方便查看结果。 存在的问题由于区分了忙碌时间和空闲时间，忙碌时间查询间隔为2分钟一次，空闲时段查询时间为30分钟一次，其余时间查询间隔为10分钟。 使用time.sleep()来是循环等待对应时间，通过Crt+C来中断循环。但是发现程序进去time.sleep()之后就无法中断，必须等待sleep时间结束，才会中断进程。例如，空闲时段中，按下Ctrl+C无法立刻结束进程，必须等待当前time.sleep(60*30)走完才可以结束。 效果丢到服务器里面自动跑。 题外话Python的模式匹配很好用啊，但是正则表达式还没学会。。另外能不能得到百度地图的实时用户数量分布？这样及时不堵车，也能看到车流量。","categories":[{"name":"计算机与互联网","slug":"计算机与互联网","permalink":"http://woodybuendia.site/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%91/"}],"tags":[{"name":"python","slug":"python","permalink":"http://woodybuendia.site/tags/python/"}]},{"title":"杂谈-读书","slug":"332","date":"2019-09-04T09:32:37.000Z","updated":"2020-06-20T07:35:43.877Z","comments":true,"path":"posts/f85a11f2/","link":"","permalink":"http://woodybuendia.site/posts/f85a11f2/","excerpt":"","text":"最近的几件事情让我挺有感触。 一，丈母娘多次在朋友圈发余秋雨大师的文化讲堂，终于忍不住怒怼了。余大师的文化苦旅在我高中时候，那看起来感觉就一个字牛逼，当时我爹翻了翻，让我不要看这种书，当时并不理解，只以为我爹老教条，不懂什么是秀口一吐就是半个盛唐的大气磅礴。后来逐渐了解了一些余大师的为人，渐觉大师人品有些问题。再后来，看到一本书，叫做识破天惊逗秋雨——余秋雨散文文史差错百例考辨，至此彻底沦为余黑。然而，我最近检索的时候也有一些疑虑：到底余大师在文格中的坏坏的写手，还只是栽赃？余大师错误百出，但不能就此推导出此人就是坏。众说纷纭，难以辨别。不过对余秋雨的印象总归不好。 二，读黄仁宇的万历十五年说实话，作为工科已经工作的人来说，万历十五年这本书很难以坚持阅读下去，但总归在一个月内看完了，看的时候觉得，这个黄的观点很不错，提出来的数字社会也很有意义，对明代的历史和人物的分析也头头是道。再看这个黄的履历，清末出生，当过兵打过仗，中年才去美国，辗转读了博士，并收到英国那个谁的赏识，很是佩服。然后，昨天在看一些资料的时候，无意中看到一篇论文，反驳黄的万历十五年里面关于李贽的分析，才发现黄的书里犯了一个我最讨厌的问题，那就是断章取义，引导读者。看了这篇论文才知道，黄对一些古文的引用完全是照着他的想法来曲解的，所有材料都为了他的观点服务，有点被欺骗的感觉。 三，流沙河老先生我并不知道流沙河是谁，检索了之后才知道在腾讯视频开过讲座，讲诗经，我应该是听过一些片段，觉得这个老先生讲的真不错，因为我本来也没有看过诗经。昨天看到流沙河是因为无意在一个记录历史的网站看到一篇文章：流沙河口述“草木篇诗案”http://mjlsh.usc.cuhk.edu.hk/book.aspx?cid=7&amp;tid=11&amp;pid=2407&amp;aid=2408因为我对文格比较感兴趣，昨天加班的时候得闲仔细看了这篇长文，再检索流沙河的一些作品，一遍是感慨文格的荒谬，一遍是对这个老先生的学识表示赞同。果然，没等我赞叹完一天，今天就看到关于流沙河的一些负面文章，说的也有细节和具体人物。再看到知乎一个提问，问流沙河与唐汉两个人的专业水平与许慎先生相比如何。才知道，流沙河讲的诗经也很多是经不起推敲的一家之言。唐汉就不用提了。 所以我也很困惑，感觉读书也很迷茫，很多书都是骗人的，然后得出这个结论的依据，也不见得就一定真是可靠。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://woodybuendia.site/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"常用电磁仿真软件","slug":"328","date":"2019-08-19T01:17:53.000Z","updated":"2020-06-20T07:35:43.867Z","comments":true,"path":"posts/cbc78bbc/","link":"","permalink":"http://woodybuendia.site/posts/cbc78bbc/","excerpt":"","text":"常用电磁软件破解版下载 ANSYS Electronics Desktop 2019 R3链接: https://pan.baidu.com/s/1pYLCf23NjtRomHp7wcL7Tg 提取码: 03mx ANSYS Electronics Desktop 2019 R2链接：https://pan.baidu.com/s/1msfX8Uc8NBlJT5p9UNRt\\_Q提取码：91cq复制这段内容后打开百度网盘手机App，操作更方便哦 ANSYS Electronics Desktop 2019 R1链接：https://pan.baidu.com/s/1lNXJCVcCnf\\_T6c8te2cFjQ提取码：5puk复制这段内容后打开百度网盘手机App，操作更方便哦 CST STUDIO SUITECST 2018链接：https://pan.baidu.com/s/1ybbYqimRy1r3gaYajD4WBw提取码：80nj复制这段内容后打开百度网盘手机App，操作更方便哦 CST 2019链接：https://pan.baidu.com/s/1qVM1WOZZn50DfbOgtoiCQQ提取码：9f1r复制这段内容后打开百度网盘手机App，操作更方便哦 MATLABMATLAB R2017a链接：https://pan.baidu.com/s/1CpPK7FzA-hbmoC-Izs4zeA提取码：jh84复制这段内容后打开百度网盘手机App，操作更方便哦 Antenna Magus Pro 2019 V9.2http://woodybuendia.site/?p=283","categories":[{"name":"资源","slug":"资源","permalink":"http://woodybuendia.site/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"资源","slug":"资源","permalink":"http://woodybuendia.site/tags/%E8%B5%84%E6%BA%90/"}]},{"title":"深度学习之图像目标检测分类-真手把手教程","slug":"294","date":"2019-07-19T06:30:05.000Z","updated":"2020-06-20T07:35:43.864Z","comments":true,"path":"posts/3cbee947/","link":"","permalink":"http://woodybuendia.site/posts/3cbee947/","excerpt":"","text":"0.吐槽 本人python零基础（16年就买了py学习手册一直没看完），深度学习零基础（17年买的花书翻了三页纸），突发奇想（领导要求），上马深度学习图像分类，三天时间跑起来python识别图像并对图片内容进行识别和框选分类。 吐槽：都说Python编程简洁，python的宗旨是：优美胜于丑陋、明了胜于晦涩、简洁胜于复杂、复杂胜于凌乱…..可是python的安装和各种编译器、各种库、各种pip、pip3、conda、wheel完全就把我弄昏了头。好不容易装起来了，又是各种路径、环境、配置乱七八糟各种问题，日了狗了。。真还不如MATLAB来的简单。。。好了吐槽归吐槽，本文让你从小白到运行py如飞。 1.清单 为避免文章冗长无章，先把所需清单和背景知识列举一下。 关键参考文献：Object detection and tracking in PyTorch，原作者简介： Chris Fotache is an AI researcher with [CYNET.ai_](http://www.cynet.ai/) based in New Jersey. He covers topics related to artificial intelligence in our life, Python programming, machine learning, computer vision, natural language processing and more._ 该文章中英文对照 用PyTorch来做物体检测和追踪 所需软件：python3.7、Anaconda 本来用的是PyCharm作为编辑器，Anaconda为python库环境，但是PyCharm使用的时候总是遇到问题，后面在Anaconda里面也找到了python的命令行窗口，总算把程序跑起来了。 运行平台：windows 10 2.安装和下载2.1 安装python打开python官网，下载win平台最新版3.7， https://www.python.org/downloads/windows/ 安装python，需要注意的是，勾选添加至系统路径。 2.2 安装anacondaAnaconda安装文件较大，下载安装。Anaconda 是一个管理python的库的平台，众所周知，python之所以强大，是因为有各种库。需要什么功能，首先寻找有没有库，这也导致了python的库版本众多，管理困难，开发环境混乱。 https://www.anaconda.com/distribution/ 下载链接 2.3 下载文件根据 参考文献：Object detection and tracking in PyTorch， 下载所需文件，下载地址为GitHub：https://github.com/cfotache/pytorch_objectdetecttrack 下载权重文件 yolov3.weights （236MB）， 将该文件放入config文件夹中，下载地址：https://pjreddie.com/media/files/yolov3.weights 2.4 安装python库所需库：pytorch、opencv、matplotlib 运行Anaconda Prompt 在Pytorch官网选择自己的版本和平台，找到相应安装的命令。 https://pytorch.org/ 我这里选择python3.7 ，conda安装，无CPU版。 在打开的 Anaconda Prompt 中输入下面命令安装pytorch conda install pytorch-cpu torchvision-cpu -c pytorch 在Anaconda Prompt中输入：conda install matplotlib安装matplot库 打开Anaconda Navigator 左侧选择Environment 搜索opencv，会出来三个，勾选后点击右下角的apply安装。 注意：如果勾选后选择安装出现错误，那么在creat中新建一个环境 我的就报错了，新建了一个名为opencv的环境，注意，这个环境与默认的base环境是独立的，之前安装的pytorch和matplot都还需要在安装一边。 由于anaconda环境不同，在anaconda prompt中，输入： activate opencv (此处是你新建的环境名称)切换到新环境之后，重新安装 pytorch和matplot 3 物体检测代码Object Detection in Images在从GitHub下载到的文件夹，名为：pytorch_objectdetecttrack-master，中新建python脚本：test.py 3.1脚本输入以下代码： from models import * from utils import * import os, sys, time, datetime, random import torch from torch.utils.data import DataLoader from torchvision import datasets, transforms from torch.autograd import Variable import matplotlib.pyplot as plt import matplotlib.patches as patches from PIL import Image config_path=&apos;config/yolov3.cfg&apos; weights_path=&apos;config/yolov3.weights&apos; class_path=&apos;config/coco.names&apos; img_size=416 conf_thres=0.8 nms_thres=0.4 # Load model and weights model = Darknet(config_path, img_size=img_size) model.load_weights(weights_path) model.cuda() #model.cpu() model.eval() classes = utils.load_classes(class_path) Tensor = torch.cuda.FloatTensor def detect_image(img): # scale and pad image ratio = min(img_size/img.size[0], img_size/img.size[1]) imw = round(img.size[0] * ratio) imh = round(img.size[1] * ratio) img_transforms=transforms.Compose([transforms.Resize((imh,imw)), transforms.Pad((max(int((imh-imw)/2),0), max(int((imw-imh)/2),0), max(int((imh-imw)/2),0), max(int((imw-imh)/2),0)), (128,128,128)), transforms.ToTensor(), ]) # convert image to Tensor image_tensor = img_transforms(img).float() image_tensor = image_tensor.unsqueeze_(0) input_img = Variable(image_tensor.type(Tensor)) # run inference on the model and get detections with torch.no_grad(): detections = model(input_img) detections = utils.non_max_suppression(detections, 80, conf_thres, nms_thres) return detections[0] # load image and get detections img_path = &quot;images/blueangels.jpg&quot; prev_time = time.time() img = Image.open(img_path) detections = detect_image(img) inference_time = datetime.timedelta(seconds=time.time() - prev_time) print (&apos;Inference Time: %s&apos; % (inference_time)) # Get bounding-box colors cmap = plt.get_cmap(&apos;tab20b&apos;) colors = [cmap(i) for i in np.linspace(0, 1, 20)] img = np.array(img) plt.figure() fig, ax = plt.subplots(1, figsize=(12,9)) ax.imshow(img) pad_x = max(img.shape[0] - img.shape[1], 0) * (img_size / max(img.shape)) pad_y = max(img.shape[1] - img.shape[0], 0) * (img_size / max(img.shape)) unpad_h = img_size - pad_y unpad_w = img_size - pad_x if detections is not None: unique_labels = detections[:, -1].cpu().unique() n_cls_preds = len(unique_labels) bbox_colors = random.sample(colors, n_cls_preds) # browse detections and draw bounding boxes for x1, y1, x2, y2, conf, cls_conf, cls_pred in detections: box_h = ((y2 - y1) / unpad_h) * img.shape[0] box_w = ((x2 - x1) / unpad_w) * img.shape[1] y1 = ((y1 - pad_y // 2) / unpad_h) * img.shape[0] x1 = ((x1 - pad_x // 2) / unpad_w) * img.shape[1] color = bbox_colors[int(np.where( unique_labels == int(cls_pred))[0])] bbox = patches.Rectangle((x1, y1), box_w, box_h, linewidth=2, edgecolor=color, facecolor=&apos;none&apos;) ax.add_patch(bbox) plt.text(x1, y1, s=classes[int(cls_pred)], color=&apos;white&apos;, verticalalignment=&apos;top&apos;, bbox={&apos;color&apos;: color, &apos;pad&apos;: 0}) plt.axis(&apos;off&apos;) # save image plt.savefig(img_path.replace(&quot;.jpg&quot;, &quot;-det.jpg&quot;), bbox_inches=&apos;tight&apos;, pad_inches=0.0) plt.show()3.2 运行python在打开的Anaconda Navigator中，选择环境，点击三角形箭头，在菜单中选择open with python 输入import torch，导入模块； 输入torch.cuda.is_available()，测试计算机是否有显卡。 讲道理pytorch是支持无显卡，纯CPU模式的，但是需要改代码，我不会，下载到的这个代码是GPU模式的。。好在我的笔记本有显卡，虽然很破，但是不会报错。另外，一般讲道理这里不应该通过anaconda来运行python的，而是通过PyCharm来编辑py代码和运行的。但是我的pycharm运行显卡测试时，总是Fase，换成anaconda打开的python，就显示Ture。这可能和笔记本的独显和集显有关。 3.3切换工作目录把通过anaconda启动的python命令行的工作目录切换到保存pytorch_objectdetecttrack-master的目录 输入：import os 输入：os.getcwd() 获取当前工作目录 输入os.chdir(‘’) 改变工作目录，我这里输入 import os os.chdir(&apos;D:/Python/pytorch_objectdetecttrack-master/pytorch_objectdetecttrack-master/&apos;)3.4运行代码在命令行输入：exec(open(‘test.py’).read()) 来执行test.py，即可检测图片中的物体。 4效果","categories":[{"name":"计算机与互联网","slug":"计算机与互联网","permalink":"http://woodybuendia.site/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%91/"}],"tags":[{"name":"python","slug":"python","permalink":"http://woodybuendia.site/tags/python/"},{"name":"pytorch","slug":"pytorch","permalink":"http://woodybuendia.site/tags/pytorch/"},{"name":"图像目标检测","slug":"图像目标检测","permalink":"http://woodybuendia.site/tags/%E5%9B%BE%E5%83%8F%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"}]},{"title":"Antenna Magus Pro 2019 V9.2","slug":"Antenna Magus Pro 2019 V9.2","date":"2019-07-18T08:04:16.000Z","updated":"2020-06-22T01:12:06.067Z","comments":true,"path":"posts/9686ac05/","link":"","permalink":"http://woodybuendia.site/posts/9686ac05/","excerpt":"","text":"Antenna Magus目前已经更新到 2019.2 v9.2，同时Magus 2019已经更改软件使用规则，没有license将不再能进入软件。由于目前网络上下载的CST 2019 license并不适用于magus，请使用下方链接中的license进行破解激活，应注意该license与CST 2019 update SP3相冲突，也就是要想用magus的话就不能使用sp3更新包了。。。 在破解安装9.2的过程中，我发现该license适用于magus 9.0，不适用于9.2，为了能用9.2，找到一种使用方法： 首先安装9.0版本，将安装目录下的solver文件夹拷贝复制，然后重新安装9.2版本，将刚才复制的solver文件夹移入安装目录进行替换，再按照常规方法进行破解之后即可使用。 Antenna Magus Pro 2019 v9.0 链接: https://pan.baidu.com/s/1oHzxa3Pu-F2XZ16M5zgjPA 提取码: 933m Antenna Magus Pro 2019 v9.2 链接: https://pan.baidu.com/s/1t2iZr5osdVjk5sbI5K7I3Q 提取码: 93e9","categories":[{"name":"天线与微波","slug":"天线与微波","permalink":"http://woodybuendia.site/categories/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"},{"name":"资源","slug":"天线与微波/资源","permalink":"http://woodybuendia.site/categories/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"antenna magus","slug":"antenna-magus","permalink":"http://woodybuendia.site/tags/antenna-magus/"}],"author":"cynric_liu"},{"title":"Ansys HFSS优化工具箱的使用：以耦合微带线电桥为例","slug":"254","date":"2019-07-18T07:13:12.000Z","updated":"2020-06-20T07:35:43.854Z","comments":true,"path":"posts/caf626e1/","link":"","permalink":"http://woodybuendia.site/posts/caf626e1/","excerpt":"","text":"为说明Ansys Electronics Desktop（即HFSS俗称海飞丝）中优化工具箱（Optimization tool）的使用，通过Optimization中的遗传算法（GA）为例，优化耦合微带线电桥。 HFSS更新至2019 R2（up to data 20190718）,不过我还在用2019 R1，新版本没找到。 网友投稿，HFSS 2019R2： Ansys Electronics Dsktop 2019 R2 Win64链接: https://pan.baidu.com/s/1Kibax1UOfBEYQfBRf8tOBA 提取码: 91zv HFSS 俗称海飞丝 耦合带线四端口耦合带线电桥，原理请查阅相关资料，模型如下图： 耦合线电桥 HFSS优化工具箱HFSS在使用优化工具箱之前，照例，依旧需要将设计到的尺寸用参数变量表示，并且需要在菜单中，将需要优化的参数勾选，才可以在Optimization选项卡中修改。 添加优化变量，设置数值范围 新建优化添加了变量之后，在左侧工程树中，选中Optimistics，单击右键，添加优化，选择Optimization，如下图所示： 添加优化 当然，添加之前需要正常设置求解和扫频等必须步骤。 新建优化之后，在Setup Optimization选项卡中，设置优化目标、求解算法、变量等。 这里电桥的优化仅涉及到S参数，因此较为简单。优化目标（即Cost function）可以通过表达式，表示复杂的目标，根据项目实际自己摸索。 Optimizer选择和设置这里选择Optimizer为MATLAB，选择之后在右侧Setup中可以选择算法，需要注意的是优化参数的个数需要手动填入。注意看，在Optimizer下方有个Max No of Iterations，指的是优化最大迭代步数，默认1000。通常建议默认就行，优化开始后观察cost变化曲线，如果几百步内没有下降趋势，那么一般是由于优化变量或参数范围不合理导致，继续优化也没有意义了。 添加目标函数Cost Function 设置目标 选择变量 选择变量 注意，这里的变量不得和第一步，全局变量的范围冲突。 点击确定后，即可通过左侧工程树下的Optimization右键——分析，计算了。 全局设置：HFSS中添加MATLAB路径Tools——Options——General Option 将MATLAB路径添加值HFSS全局设置中。 如此，优化时，HFSS将会自动打开一个MATLAB的新窗口，将每次仿真的结果传递给MATLAB中，由MATLAB optimization tool工具箱中的遗传算法GA来进行迭代，将下一次参数的值传给HFSS，进行下一轮仿真。 优化结果查看在左侧工程树optimization选中，右击，选择View Analysis Result即可查看结果，HFSS会动态显示cost变化，如果cost能随迭代步数显著下降，说明选择的变量是关键变量，且变量优化的范围合理。否则，需要调整优化设置。","categories":[{"name":"天线与微波","slug":"天线与微波","permalink":"http://woodybuendia.site/categories/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"}],"tags":[{"name":"HFSS","slug":"HFSS","permalink":"http://woodybuendia.site/tags/HFSS/"},{"name":"优化","slug":"优化","permalink":"http://woodybuendia.site/tags/%E4%BC%98%E5%8C%96/"},{"name":"电桥","slug":"电桥","permalink":"http://woodybuendia.site/tags/%E7%94%B5%E6%A1%A5/"},{"name":"遗传算法","slug":"遗传算法","permalink":"http://woodybuendia.site/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"}]},{"title":"CST优化工具箱的使用-以分支线电桥的优化为例","slug":"243","date":"2019-07-18T06:42:03.000Z","updated":"2020-06-20T07:35:43.851Z","comments":true,"path":"posts/7ad379db/","link":"","permalink":"http://woodybuendia.site/posts/7ad379db/","excerpt":"","text":"为了说明CST优化工具箱的使用，本文以分支线电桥的优化为例，通过CST优化工具箱中的遗传算法优化电桥S参数，简要说明CST优化工具箱的使用。 分支线电桥：四端口微带耦合线电桥 指标要求： 工作频率：L； 耦合度：3dB；插入损耗：≤0.3dB； 端口电压驻波比：≤1.5； 端口隔离度：≥18dB； 端口不平衡度：≤±0.2dB； 端口相位不平衡度：≤90°±3°； 在CST中建模如下： 介质材料：罗杰斯4350B，介电常数3.66；介质板厚度0.508mm 优化设置首先，建模时要将所有变量参数化，即：使用变量表达各个尺寸。 在选项卡中点击Optimizer，在setting页面选择需要优化的参数，制定各个参数的变化范围，即min和max值。在Algorith下拉菜单中，可以选择使用的优化算法，对应的属性在右侧。General Properties中可以设置需要保存的优化结果，如果发现CST优化时，没有保存所有的结果，可在此处修改成保存全部。 点击Goals选项卡，设置优化目标，根据项目求设定优化目标。这里按照电桥的要求，设置S参数为目标。 点击Ok保存，点击Start开始运行。 注意，如果使用分布式计算，这里可以在第一行右侧的Acceleration修改Distributed Computing(DC)设置，将优化参数数量提高到所有可用线程数量。这样可以并行计算多组参数，大大提高效率。 优化结果S参数（端口耦合度与隔离度） 优化过程中的Goals变化可在左侧工程树中找到，如图：","categories":[{"name":"天线与微波","slug":"天线与微波","permalink":"http://woodybuendia.site/categories/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"}],"tags":[{"name":"CST","slug":"CST","permalink":"http://woodybuendia.site/tags/CST/"}]},{"title":"内网穿透frp部署记录总结","slug":"230","date":"2019-07-15T09:13:11.000Z","updated":"2020-06-20T07:35:43.846Z","comments":true,"path":"posts/5d6c34a0/","link":"","permalink":"http://woodybuendia.site/posts/5d6c34a0/","excerpt":"","text":"根据网上教程摸索出来一套可用的方法，记录如下。 frp介绍frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。 项目地址：https://github.com/fatedier/frp/blob/master/README_zh.md ubuntu上搭建frp本人ubuntu小白，根据网上教程摸索出来一套可用的方法，记录如下。防止再次检索。 一键安装：https://github.com/MvsCode/frp-onekey Frps服务端一键配置脚本，最新版本：0.27.1 ubuntu安装方法： 以管理员身份运行：(ubuntu中，sudo代表以管理员身份运行) sudo wget https://raw.githubusercontent.com/MvsCode/frp-onekey/master/install-frps.sh -O ./install-frps.sh sudo chmod 700 ./install-frps.sh sudo ./install-frps.sh installfrps默认安装路径：/usr/local/frps/ 根据提示一步一步完成配置，默认选项即可。可修改端口以防止扫描。 配置完成之后，会提示配置信息，主要保存。尤其是dashboard登陆密码和token。 客户端配置根据平台不同，下载不同客户端，修改客户端中frpc.ini文件，需要填写的信息如下： [common] server_addr = 35.229.160.101 server_port = 65500 token = ************ [IoT_223] type = tcp local_ip = 0.0.0.0 local_port = 3389 remote_port = 6006 [S223] type = http local_port = 8080 subdomain =iot上述frpc.ini配置中，common中的token为服务器的token。第二项[IoT_223]为当前客户端的名称，可以任意修改。本地端口和远程端口按照需要修改，这里3389为本地远程连接端口，服务器远程端口6006为任意可用端口。 这样，客户端在frpc.exe文件夹中运行cmd，cmd中输入fprc即可。显示如下信息即表明运行成功： frp管理平台我的管理平台为：http://woodybuendia.site:**** 服务器配置中，dashboard意为管理平台，打开方式为在浏览器中输入IP/域名：dashboardPort 打开之后需要输入用户名和密码，打开之后的效果如下：默认显示Overview 在左侧点击TCP可以看到当前连接的客户端 frp内网穿透的意义1.远程桌面例如：客户端（公司内网的计算机），需要在公司以外的地方访问，传统方法可以使用TeamView软件等，进行连接。 使用frp内网穿透之后，可以直接在windows自带的远程桌面中，输入****.woodybuendia.site:**** 注意到，这里的前缀和端口是frpc.ini文件中自己配置的。 2.远程访问家里/办公室的NAS使用NAS的同学知道，在局域网中的NAS设备，是通过固定IP访问。如果使用frp内网穿透，可以直接使用次级域名加端口形式直接访问，比如我家里的NAS可以任何网络，在浏览器中输入地址： http://***.woodybuendia.site:****/ 访问。 该项属于：通过自定义域名访问部署于内网的 web 服务 frp服务背景运行和自动启动windows平台：设置开机启动和后台运行 NAS: https://blog.ysoup.org/tech/synology-nas-frp-frpc.html Ubuntu: https://free-e.net/109 Frp与架设在Google Cloud platform（GCP）上的VPS端口问题在将VPS送Linode迁徙到Google Cloud platform（GCP）上时，重新部署Frp，总是遇到配置完成之后无法访问 frp的dashboard ，经查证，是由于GCP实例主机的防火墙没有开发对应端口导致，GCP默认只开放几个常用端口，需要在GCP控制面板配置防火墙出入站规则。","categories":[{"name":"计算机与互联网","slug":"计算机与互联网","permalink":"http://woodybuendia.site/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%91/"}],"tags":[]},{"title":"网站维护记录","slug":"188","date":"2019-07-09T02:53:59.000Z","updated":"2020-06-20T07:35:43.844Z","comments":true,"path":"posts/e65408d4/","link":"","permalink":"http://woodybuendia.site/posts/e65408d4/","excerpt":"","text":"20190629 ：网站迁移至Google Cloud Platform；使用Apache2+PHP+MySq构架。网站内容通过插件 UpdraftPlus-备份/恢复 完整从Lionde VPS迁移至GCP。 20190708：新增分享页面、关注社交账号功能，使用WordPress插件**Share Buttons by AddThis** 实现。 20190709：新增PDF在线/页面内预览功能，提高网站PDF文件阅读体验。使用插件： Algori PDF Viewer Lite ，示例页面：http://woodybuendia.site/?p=175 20190709：之前在网站后台看到有非中文地区IP访问，并使用Google翻译查看本网站，为方便非中文访客，使用 GTranslate 插件提供页面内翻译功能；晚上浏览网站时，发现打开速度异常缓慢，使用chrome开发者模式发现是插件访问google翻译服务器所致，暂停插件 GTranslate 。","categories":[{"name":"未分类","slug":"未分类","permalink":"http://woodybuendia.site/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"}],"tags":[]},{"title":"CST Studio Suite 2019","slug":"175","date":"2019-07-09T01:37:07.000Z","updated":"2020-06-20T07:35:43.842Z","comments":true,"path":"posts/f839a19a/","link":"","permalink":"http://woodybuendia.site/posts/f839a19a/","excerpt":"","text":"CST 2019已经更新，相应和谐版也可以下载到。 这里提供的CST 2019的license支持分布式计算。 百度网盘下载地址： 链接：https://pan.baidu.com/s/1P4BldP1xcILOkuEGpzMfiQ提取码：w8ly CST 2019 Update SP3 安装包附上 链接：https://pan.baidu.com/s/1a9rUUMO5xg6S2q02JvDW7Q提取码：304k-————————来自： cynric_liu@126.com CST Studio Suit 2019 Feature Highlights CST-Studio-Suite-2019下载","categories":[{"name":"天线与微波","slug":"天线与微波","permalink":"http://woodybuendia.site/categories/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"}],"tags":[]},{"title":"HFSS-MATLAB-API 使用教程","slug":"155","date":"2019-07-02T09:06:00.000Z","updated":"2020-06-20T07:35:43.839Z","comments":true,"path":"posts/bb103e19/","link":"","permalink":"http://woodybuendia.site/posts/bb103e19/","excerpt":"","text":"HFSS-MATLAB-API 使用教程 By WoodyBuendia 为控制本教程传播版本，提供最新的更新，不再提供教程下载，如果有需求请发邮件索取。——20200509关于HFSS脚本根据HFSS 15版本帮助文件介绍，HFSS软件使用Microsoft®Visual Basic® Scripting Edition (VBScript)脚本语言记录宏指令。 一方面，在打开HFSS软件进行一些造作时，如果选择Tools——Record Script to file，新建一个.vbs后缀的脚本文件，可以将所有的操作记录在新建的脚本中；另一方面可以编写符合格式的脚本文件，通过Tools——Run Script来让HFSS软件运行编写好的脚本。 在一些特定的场景，事先编写脚本让HFSS执行相关操作，是非常高效和准确的，可以节省大量的重复性造作；不仅如此，在有些情况下，由于建模过于复杂或者模型变量需要通过第三方优化算法相互调用，那么只能使用编写脚本的方法才能完成。 在这个最简单的脚本中，可以看到即使是新建一个圆面的操作，需要的脚本也是比较多和复杂的，如果手动一行行敲入这些脚本代码，一方面过于冗长难免出现各种错误，另一方面也无法实现提高效率的初衷。 好在前辈们给出了一些简便的方法，可以将重复性的操作变成可以调用的函数，将需要指定的相关参数作为输入，通过相关编程语言自动完成vbs脚本文件。这些操作可以通过MATLAB或者Python完成，本文介绍的HFSS-MATLAB API就是通过MATLAB编写一套可调用的程序库，通过编写MATLAB代码来生成所需的vbs脚本。 HFSS脚本：HFSS-MATLAB API如前所述，使用MATLAB编写程序是生成脚本的一个可行的方法，早在2004年，名为Vijay Ramasami (rvc@ku.edu)的前辈发布了（据我所知）一套基于MATLAB的HFSS-MATLAB API，已经实现了通过编写MATLAB程序来生成vbs脚本，之后再通过HFSS菜单栏tool-run script，选择所生成的vbs脚本文件执行。 根据我所下载到的版本，Yueliang(yue_liang423@163.com)对该API也有贡献（2008年）。然而，上述API实现功能还不够，并且不支持参数化。毕竟时过境迁，HFSS的版本也迭代到了2018，HFSS本身的功能也十分复杂，个人难以开发一个完整脚本接口。但是，HFSS每一步的操作均可以记录到脚本中，你可以将你的操作记录下来然后程序化。 在笔者的工作学习过程中，从发现这个API之后，就一直在使用这套API，因为工作的原因需要建模或者联合仿真一些诸如阵列、波导缝隙以及一些特殊类型天线。我在使用中对下载得到的API做了较大的改动，主要有以下几个方面： 添加定义参数、修改参数； 修改3dModeler中常见模型建模的函数，使其支持参数化建模； 添加了一些功能。 详细内容，请下载PDF文档： 20180411,对教程做了少量修改与修订，已更新并上传到百度云。 本文除已说明和致谢外，均为原创，未经本人同意，严禁擅自发表，包括但不限于微信、微博公共号或网站和论坛。如有需求请与本人联系。 相关资源已经上传至Github，地址为：https://github.com/WoodyBuendia/HFSS-MATLAB-API.git 鉴于GitHub有时候不便访问，也可通过百度网盘下载，链接：https://pan.baidu.com/s/1mLtNEmaIBR-TUXHpz02RFA 密码：v837​ 本教程作者吴迪 ​联系邮箱：woodybuendia@gmail.com；tinywoody@126.com; 后记自从我去年发表这个教程以来，很多朋友给我发邮件、微信，很感激同行们能够关注到这个API，也很高兴能和同行们讨论天线和HFSS的专业问题。如果有遗漏或回复不及时，还请见谅。 因为我本身只是一名毕业了的硕士研究生毕，能力有限，很多问题我也没注意到，还请大家一起改善。 另外，使用这个API是需要一定MATLAB基础的。这里说的一定基础，我觉得可能对只接触过MATLAB的人来说，还是有点要求的。 起码你要知道什么是变量，什么是函数，什么是MATLAB的工作路径，你不能运行一下代码，报错说：未定义的函数或变量’hfssNewProject’，你就跑来问为什么。你说为什么？因为你没有把这些函数的路径添加到matlab的path啊。问我怎么添加？我觉得自己百度吧。。","categories":[{"name":"MATLAB","slug":"MATLAB","permalink":"http://woodybuendia.site/categories/MATLAB/"},{"name":"天线与微波","slug":"MATLAB/天线与微波","permalink":"http://woodybuendia.site/categories/MATLAB/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"}],"tags":[{"name":"HFSS-Matlab API","slug":"HFSS-Matlab-API","permalink":"http://woodybuendia.site/tags/HFSS-Matlab-API/"}]},{"title":"建站记录","slug":"139","date":"2019-05-28T02:32:37.000Z","updated":"2020-06-20T07:35:43.836Z","comments":true,"path":"posts/cbe82740/","link":"","permalink":"http://woodybuendia.site/posts/cbe82740/","excerpt":"","text":"简要记录本网站搭建的过程，以供参考。 Update 20190629: 由于六月初特殊时期，本站点原VPS供应商：Linode新加坡机房IP被封，迁移至Google Cloud Platform。GCP活动期间注册验证信用卡送300美元，基本可以免费使用一年，地址： https://cloud.google.com/free/ 购买域名首先购买域名，本网站通过阿里云（万网）购买域名：woodybuendia.site.由于域名便宜，一下子买了十年，花费179RMB。 购买域名连接：https://wanwang.aliyun.com/ 购买VPS服务器之所以搭建个人博格，是因为前段时间从09年开始写的网易博客关站，整个网易博客整体关闭。虽然提供迁移到Lofter的途径，但毕竟感觉连黄易都能关闭博客。后面虽然经常在新浪博客发表一些文章，也总想着能自己购买服务器自建。 本站VPS服务器购买的是境外VPS提供商：Linode，网站：https://cloud.linode.com 我选择的节点是： Nanode 1GB: 1 CPU, 25GB Storage, 1GB RAMSingapore, SG 费用：5美元每月，初次注册赠送20美元，相当于5美元可以用四个月。 注意：需要支持Visa的信用卡，我用的是招商银行的全币卡。全币卡可以直接在招商银行app掌上生活中申请。 创建VPS操作系统本站使用Ubuntu16版本，在购买VPS时候即需要选择VPS服务器上运行的操作系统。 域名映射VPS服务器购买、创建系统之后，在你的VPS提供商管理界面中会看到你的VPS的IP地址，这个IP地址是公网地址。 打开阿里云域名管理的页面，将注册的域名映射到VPS的IP地址。 VPS服务器中安装Web服务器、数据库等本站使用的Web服务器数据库是 LAMP组合，“LAMP”是一组开放源代码软件，通常安装在一起以使服务器能够托管动态网站和网络应用。 这个词其实是代表第linux下的操作系统，与A帕什Web服务器的缩写。 站点数据存储在A M ySQL数据库，和动态内容用P惠普处理。 具体操作主要参考网站：https://www.howtoing.com/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-16-04 安装wordpress本网站使用wordpress作为网站内容架构。 WordPress是互联网上最流行的CMS（内容管理系统）。它允许您轻松地在PHP处理的MySQL后端设置灵活的博客和网站。 WordPress已经看到令人难以置信的采用，是一个伟大的选择，使网站快速运行。 安装参考网页：https://www.howtoing.com/how-to-install-wordpress-on-ubuntu-14-04/ 完成网站搭建Enjoy！","categories":[{"name":"随笔","slug":"随笔","permalink":"http://woodybuendia.site/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"记录","slug":"记录","permalink":"http://woodybuendia.site/tags/%E8%AE%B0%E5%BD%95/"}]},{"title":"利用编程快速生成较大规模可重构阵列与编辑PIN二极管状态——Part Ⅰ:生成","slug":"117","date":"2019-05-27T03:45:59.000Z","updated":"2020-06-20T07:35:43.832Z","comments":true,"path":"posts/95c7c80e/","link":"","permalink":"http://woodybuendia.site/posts/95c7c80e/","excerpt":"","text":"简介在可重构天线阵列的设计中，通常使用LumpedRLC（以HFSS为例）来仿真PIN二极管各种状态。在一些较大规模的可重构天线设计中，如何快速建模和修改阵列中每个单元中的PIN二极管状态，是一个需要解决的问题。 利用 HFSS-MATLAB-API 可以通过Matlab编程生成脚本，来让HFSS软件自动执行生成的脚本。在Matlab中编辑阵列中PIN（LumpedRLC）的状态和组合，远远比在HFSS软件中手动修改要快速、简便。 关于 HFSS-MATLAB-API 的使用介绍，参考之前的文章：HFSS-MATLAB-API使用教程 本文介绍如何用该API快速生成较大规模的可重构天线阵列。 添加函数由于原api没有函数可以一个面设置LumpedRLC边界，需要添加一个函数。添加函数：hfssAssignLumpedRLC 所需输入变量：fid, Name, ObjName, iLStart, iLEnd,R,L,C,Units 其中，Name为生成的Lumped RLC名称，ObjName为选定面的名称， iLStart, iLEnd 为起始的积分线，RLC为电阻电感电容值。注意，如果仅为边界设置电阻值，那么LC的输入应为L=[]，C=[]。Units为距离单位，如mm。 具体函数内容： hfssAssignLumpedRLC hfssAssignLumpedRLC.mDownload 创建天线阵列Contents内容： Initial antenna parameter add vars Single Reconfigurable patch Assign boundary Array fclose 具体代码参见： Reconfigurable-Array_MatlabCode （程序没有考虑工作路径，需按照实际修改） ReconfigurableArray.m-1Download 打开HFSS，菜单栏选择tool——Run Script Script文件： Reconfigurable-Array.vbs_Download（下载后删除txt后缀） 示意图","categories":[{"name":"MATLAB","slug":"MATLAB","permalink":"http://woodybuendia.site/categories/MATLAB/"},{"name":"天线与微波","slug":"MATLAB/天线与微波","permalink":"http://woodybuendia.site/categories/MATLAB/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"}],"tags":[{"name":"天线","slug":"天线","permalink":"http://woodybuendia.site/tags/%E5%A4%A9%E7%BA%BF/"},{"name":"HFSS-Matlab API","slug":"HFSS-Matlab-API","permalink":"http://woodybuendia.site/tags/HFSS-Matlab-API/"}]},{"title":"【工作笔记】RFID系统工作原理与920MHz读卡器天线设计","slug":"111","date":"2019-05-24T09:24:50.000Z","updated":"2020-06-20T07:35:43.829Z","comments":true,"path":"posts/876c3924/","link":"","permalink":"http://woodybuendia.site/posts/876c3924/","excerpt":"","text":"【工作笔记】工作笔记系列文章，将会记录在工作中学习或者遇到的各种知识点与问题，一方面增强记忆、方便回忆；另一方面作为参考。 RFID系统工作原理简介射频识别技术——Radio Frequency Identification，简称 RFID；是一种利用无线电识别物体的技术，可以做到品级标签识别能力（ILT：Item Level Tagging）。 一个较为典型的射频识别系统的基本结构的组成一般包括标签（Tag）、读写器（Reader）和应用系统（Application System）。RFID 系统的工作流程是：阅读器通过天线发射调制信号，当标签进入到可识别区域时，标签通过天线接收能量并激活芯片，并将自身的编码信息（ID）通过标签天线反馈给阅读器。阅读器天线接收到标签天线发送回来的载波信号，对信号进行解调和解码后送到数据交互管理系统进行处理。 RFID工作频段、工作方式、作用距离低频（LF）：125 kHz-134 kHz；工作方式：电磁耦合；作用距离：低频读写器天线的读写范围一般为几厘米至几十厘米。 高频（HF）：13.56 MHz； 超高频（UHF)：国际标准为 860 MHz-960 MHz，在中国为902 MHz-928 MHz; 微波波段：2.4 GHz 和 5.8 GHz。 射频识别系统与天线的分类对于采用被动式标签的射频识别系统而言，根据工作频段的不同具有两种工作模式。一种是感应耦合（Inductive Coupling）工作模式,这种模式也称为近场工作模式，它主要适用用于低频和高频RFID系统；另一种则是反向散射（Back scattering）工作模式，这种模式也称为远场工作模式，主要适用于超高频和微波RFID系统。 感应耦合模式主要是指读写器天线和标签天线都采用线圈形式。当读写器在阅读标签时，发出未经调制的信号，处于读写器天线近场的电子标签天线接收到该信号并激活标签芯片之后，由标签芯片根据内部存储的全球唯一的识别号（ID）控制标签天线中的电流大小。这个电流的大小进一步增强或者减小阅读器天线发出的磁场。这时，读写器的近场分量展现出被调制的特性，读写器内部电路检测到这个由于标签而产生的调制量并解调并得到标签信息。 在反向散射工作模式中，读写器和电子标签之间采用电磁波来进行信息的传输。当读写器对标签进行阅读识别时，首先发出未经调制的电磁波，此时位于远场的电子标签天线接收到电磁波信号并在天线上产生感应电压，电子标签内部电路将这个感应电压进行整流并放大用于激活标签芯片。当标签芯片激活之后，用自身的全球唯一标识号对标签芯片阻抗进行变化，当电子标签芯片的阻抗和标签芯片之间的阻抗匹配较好时则基本不反射信号，而阻抗匹配不好时则将几乎全部反射信号，这样反射信号就出现了振幅的变化，这种情况类似于对反射信号进行幅度调制处理。读写器通过接收到经过调制的反射信号判断该电子标签的标识号并进行识别。这类天线主要包括微带天线、平面偶极子天线和环形天线。 ….待续","categories":[{"name":"天线与微波","slug":"天线与微波","permalink":"http://woodybuendia.site/categories/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"}],"tags":[{"name":"RFID","slug":"RFID","permalink":"http://woodybuendia.site/tags/RFID/"},{"name":"天线","slug":"天线","permalink":"http://woodybuendia.site/tags/%E5%A4%A9%E7%BA%BF/"},{"name":"工作笔记","slug":"工作笔记","permalink":"http://woodybuendia.site/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"}]},{"title":"PDF：Application Note of Radar Sensing and Detection_Innosent_调频连续波","slug":"107","date":"2019-05-23T03:40:27.000Z","updated":"2020-06-20T07:35:43.826Z","comments":true,"path":"posts/e0bb75b4/","link":"","permalink":"http://woodybuendia.site/posts/e0bb75b4/","excerpt":"","text":"Innosent是世界上最大的商业用24GHZ雷达传感器制造商，世界第二大的自动工控用雷达制造商，位于德国乌滋堡，是一家专业设计，生产，销售应用于工业’商业·自动化控制等领域的雷达传感器的高科技公司。公司的雷达传感器是使用世界最先进的平面微带天线技术制造而成，体积小，集成化程度高，感应灵敏。公司成立于1999年，有大批有二三十年雷达开发经验的技术人员，生产的传感器远销世界各地，被广泛运用于自动开门，交通测速测距测流量，液位测量，安防闯入警报，计数器，体育测速，汽车ACC雷达巡航系统等。 在其官网上看到一些相关资料，主要是Application Note感觉写的很不错，分享一下。 原文分为四个部分，合并成一个pdf上传： 链接：https://pan.baidu.com/s/1aooawnp7o0RmWO659KTFDw 提取码：8r19 内容包括：","categories":[{"name":"资源","slug":"资源","permalink":"http://woodybuendia.site/categories/%E8%B5%84%E6%BA%90/"}],"tags":[]},{"title":"毫米波无线通信英文原版《MillimeterWaveWirelessCommunications》","slug":"103","date":"2019-05-23T03:34:13.000Z","updated":"2020-06-20T07:35:43.821Z","comments":true,"path":"posts/386efdff/","link":"","permalink":"http://woodybuendia.site/posts/386efdff/","excerpt":"","text":"《毫米波无线通信》Theodore S. Rappaport原版pdf，Google搜索了很久都没找到，最后是一个专业微信群的同行发给我的，感谢这位朋友。 如有需求请邮件联系。","categories":[{"name":"资源","slug":"资源","permalink":"http://woodybuendia.site/categories/%E8%B5%84%E6%BA%90/"}],"tags":[]},{"title":"CST Studio 2018分布式计算(Distributed Computing)部署和破解","slug":"68","date":"2019-05-22T09:15:48.000Z","updated":"2020-06-20T07:35:43.895Z","comments":true,"path":"posts/ac6f8e20/","link":"","permalink":"http://woodybuendia.site/posts/ac6f8e20/","excerpt":"","text":"The Distributed Computing system allows the distribution of independent simulation runs over several computers within a network. We will describe the basic architecture of the system first before focusing on installation and configuration issues.——CST STUDIO SUITE 2018 Help CST的分布式计算，允许将仿真的求解分别运行在不同的求解端（Solver Server）。构架可以参考CST官方的帮助文档，如下图： 对应的CST客户端设置： 部署方式 客户端 客户端安装完整的CST 2018，正常安装即可； CST 2018下载地址： 链接:https://pan.baidu.com/s/1XP9Pphmz-PThPoC1TpO-GA 提取码:2919 CST DC main control 仅安装DC main control； 求解服务器 完整安装CST; 破解 客户端 现有的CST 2018很多破解版本是不支持DC分布式计算的，偶然得到一个可以用的Lic文件，可以实现分布式计算。 为避免版权纠纷，此处不提供破解版下载方式。网上广为流传的2018版CST的license是无法实现分布式计算，建议Google搜索关键词：CST 2019. CST 2019 license可以用于CST 2018. DC main control 打开DC main control，如图： 为其分配工作目录，注意，DC作为分布式计算的中心节点，所有的客户端模型数据、求解服务器解算结果，均会发送到DC 上，因此建议为DC 分配存储中间较大、且为SSD的工作空间。 Solver Server求解服务器 运行CST DC Solver control 为求解服务器分配工作目录、填写DC main control IP地址，其中Number of Servers数量表示该求解服务器贡献于DC的个数。 端口CST 2018默认即可。 点击开始服务：Start Server 部署完成后 部署完成后，在DC 的main control可以看到网络上所有的solver server，如图： 如何使用 以笔记本端运行的CST为例，打开CST后，在菜单栏中设置DC相关信息，填写DC IP地址。 运行CST Main control，在Remote Connection…中输入DC IP地址，点击连接。 勾选DC，第一项设置意思是分布式计算在，参数扫描/最优化时，允许DC求解的参数个数。如果你服务器多，这里建议设成较高的值，如果扫参时，CST将会把最大数量的参数组合分配给所有服务器，这将会大大提高扫参速度。十分暴力。 可能问题 license的问题 在部署中，出现了：FlexNet Licensing error:-96,7. System Error: 11001 “WinSock: Host not found (HOST_NOT_FOUND)”的错误。 该问题十分蹊跷，因为各项设置已经弄好，各个服务器已经连上了DC，在客户端仿真时，已经显示将不同的任务分配给求解服务器，在连接成功之后，对话框显示：Waiting for license server to respond，等待一会之后直接跳错。如图 查看日志文件，显示：Could not connect to license to license server(270018@woodybuendia)! Error:License Server machine is down or not responding. 直观上看是license服务器问题，一度准备放弃。因为毕竟都说破解版的CST是不能用分布式计算的。 仔细考虑一下整个CST Distributed Computing 整个系统，发现无论是DC main control还是Solver server求解服务器，都没有要求任何license，但是CST又不能不验证许可就可以求解。 我认为CST把整个分布式计算的许可问题放在了客户端，DC中心节点和求解服务器都不要求许可。那么，上述问题就变成DC无法与客户端的许可服务器通信。 用过CST的同学都知道，破解第一步就是替换License文件中的第一行hostname，而这个hostname通常要求替换成计算机名称，例如我的笔记本：woodybuendia，端口默认27000，所以就变成了DC服务器寻早27000@woodybuendia这个许可证服务器。 有网路基础就知道这个地址是没有办法再TCP/IP中解析的。 于是把hostname，直接改成客户端的IP地址即可。。。。顺利实现CST分布式计算。 By Woodybuendia 20190522","categories":[{"name":"天线与微波","slug":"天线与微波","permalink":"http://woodybuendia.site/categories/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"}],"tags":[]},{"title":"Antenna Magus Pro 8.0和CST 2018安装与破解","slug":"47","date":"2019-05-07T02:28:57.000Z","updated":"2020-06-20T07:35:43.892Z","comments":true,"path":"posts/dc7494f2/","link":"","permalink":"http://woodybuendia.site/posts/dc7494f2/","excerpt":"","text":"Antenna Magus是一个非常实用、天线种类很多的快速天线设计软件，最大的优势是集成了许多现有的天线形式，根据输入指标快速设计初步的天线尺寸。 Antenna Magus可以导出CST和Feko模型，软件内也有快速评估工具，可以生成天线性能报告。 Antenna Magus Pro8.0对应CST 2018，两个配合使用。 由于Antenna Magus的license server使用的是CST的license server，因此安装Antenna Magus之前需要事先安装CST 2018. CST 2018下载地址： 链接:https://pan.baidu.com/s/1XP9Pphmz-PThPoC1TpO-GA 提取码:2919 复制这段内容后打开百度网盘手机App，操作更方便哦 Antenna Magus Pro8.0下载地址： 链接：https://pan.baidu.com/s/18\\_Scrv5byi6YGuceYLxhUQ 提取码：tnmy 复制这段内容后打开百度网盘手机App，操作更方便哦 破解方法：安装破解好CST 2018之后。运行：AntennaMagusPro8.0.0.exe 安装完成后，从：CST Studio Suite 2018 x64 Crack Only文件夹中拷贝CST_patch.exe文件到Magus安装位置，如:C:\\Program Files\\Antenna Magus 在AntennaMagus安装文件夹中运行CST_patch； 等待运行完成后，破解完成。 运行AntennaMagus，会出现报错界面，直接点击忽略： 打开AntennaMagus界面： Enjoy！ by Woody Buendia 20190507","categories":[{"name":"天线与微波","slug":"天线与微波","permalink":"http://woodybuendia.site/categories/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"}],"tags":[]},{"title":"服务器远程桌面安装MATLAB出现License Manager Error -103的解决办法","slug":"44","date":"2019-05-05T07:50:15.000Z","updated":"2020-06-20T07:35:43.889Z","comments":true,"path":"posts/b093272c/","link":"","permalink":"http://woodybuendia.site/posts/b093272c/","excerpt":"","text":"公司用的虚拟化，配了一台win 10的服务器。安装MATLAB 2016a的时候出现License Manager Error -103的错误。 经查找，是由于： matlab使用了 FLEXlm进行 liscense管理，而 FLEXlm不支持从远程桌面访问。不过，对 liscense文件稍加修改，就能够使用。 解决方案参考：https://blog.csdn.net/hezhongla0811/article/details/81226539 需要注意的是，不要在matlab crack文件夹中修改license_standalone.lic文件，亲测这么操作之后，C:\\Program Files\\MATLAB\\R2018a\\licenses文件夹中的license****.lic文件，依旧不行。 直接在C:\\Program Files\\MATLAB\\R2018a\\licenses文件夹中修改lic文件。 另外，原博客里面说的有些含糊的地方： 用 TS_OK SIGN 替换 SIGN 修改之后的效果： INCREMENT Aerospace_Blockset MLM 369 permanent uncounted \\ VENDOR_STRING=vi=0:at=200:ae=1:lu=300:lo=IN:ei=6257193:lr=1: \\ HOSTID=ANY SN=968398 TS_OK SIGN=0D8A1582514C HOSTID=ANY SN=968398 TS_OK SIGN=0D8A1582514C MATLAB 2018a可靠的下载链接参考下面网页。 MATLAB 2018a Win/Mac/Linux 官方原版 完美激活破解版补丁","categories":[{"name":"MATLAB","slug":"MATLAB","permalink":"http://woodybuendia.site/categories/MATLAB/"}],"tags":[]},{"title":"二〇一九年四月五日·清明","slug":"24","date":"2019-04-05T14:05:35.000Z","updated":"2020-06-20T07:35:43.849Z","comments":true,"path":"posts/4123a0c2/","link":"","permalink":"http://woodybuendia.site/posts/4123a0c2/","excerpt":"","text":"今天是2019年4月5日，清明节。 昨天夜里梦到一个场景，依稀记得是在一个雨天，独自一人再回家的路上。最后一段路没有车，是一个陌生人用自行车载着我回去的。梦里彷佛还和这个人有过交谈，但这个人是谁，确实完全与记忆没有关联。 梦中回的家，竟然是爷爷家，梦里的小路和房屋都和记忆中一模一样。湿哒哒的雨天，泥泞的土路。 梦里，最终没有梦到回家，梦境在一个岔路口嘎然而止。 这个清明节，在烟台，天气晴好，刮着大风，完全不像细雨微风、烟柳如墨的江南。以前，每逢清明时节倒是十分厌恶阴雨连绵。可如今，在北方的晴空里，竟然有一丝的怀念。 十年生死两茫茫，不思量，自难忘，千里孤坟何处话凄凉。 ——谨记一个远离家乡无法回去祭奠的清明","categories":[{"name":"随笔","slug":"随笔","permalink":"http://woodybuendia.site/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[]},{"title":"电扫阵列：MATLAB 建模与仿真","slug":"12","date":"2019-03-07T07:40:43.000Z","updated":"2020-06-20T07:35:43.834Z","comments":true,"path":"posts/47beb6a6/","link":"","permalink":"http://woodybuendia.site/posts/47beb6a6/","excerpt":"","text":"电扫阵列：MATLAB 建模与仿真 Electronically Scanned Arrays: MATLAB Modeling and Simulation 推荐一本MATLAB 关于天线阵列编程相关的书籍，中文版现在已经不好买了。15年时买了中文版，并辗转从jlqsczw_2007@163.com 得到这本书的英文原版pdf。现共享在这里。 推荐一本MATLAB 关于天线阵列编程相关的书籍，中文版现在已经不好买了。15年时买了中文版，并辗转从jlqsczw_2007@163.com 得到这本书的英文原版pdf。现共享在这里。 电扫阵列：MATLAB建模与仿真 [英] A·D·布朗 著，汪连栋，孔德培，乔会东 等 译 Electronically Scanned Arrays: MATLAB Modeling and Simulation https://pan.baidu.com/s/1RjtkYCafReFr3Ql9DTI-9w密码: e65s","categories":[{"name":"天线与微波","slug":"天线与微波","permalink":"http://woodybuendia.site/categories/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"}],"tags":[]},{"title":"世界，您好！","slug":"1","date":"2019-03-07T03:28:10.000Z","updated":"2020-06-20T07:35:43.818Z","comments":true,"path":"posts/bbc48f3a/","link":"","permalink":"http://woodybuendia.site/posts/bbc48f3a/","excerpt":"","text":"欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！ 大家好，我是WoodyBuendia，欢迎访问我的小站。 https://www.youtube.com/watch?v=1rLWVZVWfdY","categories":[{"name":"未分类","slug":"未分类","permalink":"http://woodybuendia.site/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"}],"tags":[]}],"categories":[{"name":"随笔","slug":"随笔","permalink":"http://woodybuendia.site/categories/%E9%9A%8F%E7%AC%94/"},{"name":"MATLAB","slug":"MATLAB","permalink":"http://woodybuendia.site/categories/MATLAB/"},{"name":"计算机与互联网","slug":"计算机与互联网","permalink":"http://woodybuendia.site/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%91/"},{"name":"天线与微波","slug":"MATLAB/天线与微波","permalink":"http://woodybuendia.site/categories/MATLAB/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"},{"name":"资源","slug":"资源","permalink":"http://woodybuendia.site/categories/%E8%B5%84%E6%BA%90/"},{"name":"天线与微波","slug":"天线与微波","permalink":"http://woodybuendia.site/categories/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/"},{"name":"资源","slug":"天线与微波/资源","permalink":"http://woodybuendia.site/categories/%E5%A4%A9%E7%BA%BF%E4%B8%8E%E5%BE%AE%E6%B3%A2/%E8%B5%84%E6%BA%90/"},{"name":"未分类","slug":"未分类","permalink":"http://woodybuendia.site/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"HFSS-Matlab API","slug":"HFSS-Matlab-API","permalink":"http://woodybuendia.site/tags/HFSS-Matlab-API/"},{"name":"天线","slug":"天线","permalink":"http://woodybuendia.site/tags/%E5%A4%A9%E7%BA%BF/"},{"name":"python","slug":"python","permalink":"http://woodybuendia.site/tags/python/"},{"name":"资源","slug":"资源","permalink":"http://woodybuendia.site/tags/%E8%B5%84%E6%BA%90/"},{"name":"pytorch","slug":"pytorch","permalink":"http://woodybuendia.site/tags/pytorch/"},{"name":"图像目标检测","slug":"图像目标检测","permalink":"http://woodybuendia.site/tags/%E5%9B%BE%E5%83%8F%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"},{"name":"antenna magus","slug":"antenna-magus","permalink":"http://woodybuendia.site/tags/antenna-magus/"},{"name":"HFSS","slug":"HFSS","permalink":"http://woodybuendia.site/tags/HFSS/"},{"name":"优化","slug":"优化","permalink":"http://woodybuendia.site/tags/%E4%BC%98%E5%8C%96/"},{"name":"电桥","slug":"电桥","permalink":"http://woodybuendia.site/tags/%E7%94%B5%E6%A1%A5/"},{"name":"遗传算法","slug":"遗传算法","permalink":"http://woodybuendia.site/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"},{"name":"CST","slug":"CST","permalink":"http://woodybuendia.site/tags/CST/"},{"name":"记录","slug":"记录","permalink":"http://woodybuendia.site/tags/%E8%AE%B0%E5%BD%95/"},{"name":"RFID","slug":"RFID","permalink":"http://woodybuendia.site/tags/RFID/"},{"name":"工作笔记","slug":"工作笔记","permalink":"http://woodybuendia.site/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"}]}